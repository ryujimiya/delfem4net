ImageRuntimeVersion: v4.0.30319
Assembly DelFEM4Net, Version=1.0.*, Culture=ロケールに依存しない言語 (ロケールに依存しない国): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class DelFEM4Net.Test: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetCom.ClrStub: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    StringToStd(basic_string<char\,std::char_traits<char>\,std::allocator<char> >*, String): PrivateScope, Public, Static, HideBySig
    StdToString(basic_string<char\,std::char_traits<char>\,std::allocator<char> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    PtrToString(SByte*): PrivateScope, Public, Static, HideBySig
    PtrToString(SByte*): PrivateScope, Public, Static, HideBySig
    VectorToList<unsigned int>(vector<unsigned int\,std::allocator<unsigned int> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToVector<double>(IList`1, vector<double\,std::allocator<double> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetCad::CEdge2D,Cad::CEdge2D>(IList`1, vector<Cad::CEdge2D\,std::allocator<Cad::CEdge2D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    VectorToList<double>(vector<double\,std::allocator<double> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Com::CVector2D,DelFEM4NetCom::CVector2D>(vector<Com::CVector2D\,std::allocator<Com::CVector2D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToVector<unsigned int>(IList`1, vector<unsigned int\,std::allocator<unsigned int> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetCom::CVector3D,Com::CVector3D>(IList`1, vector<Com::CVector3D\,std::allocator<Com::CVector3D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetCom::CVector2D,Com::CVector2D>(IList`1, vector<Com::CVector2D\,std::allocator<Com::CVector2D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetMsh::SBar,Msh::SBar>(IList`1, vector<Msh::SBar\,std::allocator<Msh::SBar> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetMsh::STri2D,Msh::STri2D>(IList`1, vector<Msh::STri2D\,std::allocator<Msh::STri2D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetMsh::SQuad2D,Msh::SQuad2D>(IList`1, vector<Msh::SQuad2D\,std::allocator<Msh::SQuad2D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    VectorToList<int>(vector<int\,std::allocator<int> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::SBar,DelFEM4NetMsh::SBar>(vector<Msh::SBar\,std::allocator<Msh::SBar> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::STri2D,DelFEM4NetMsh::STri2D>(vector<Msh::STri2D\,std::allocator<Msh::STri2D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::SQuad2D,DelFEM4NetMsh::SQuad2D>(vector<Msh::SQuad2D\,std::allocator<Msh::SQuad2D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::CTriAry2D,DelFEM4NetMsh::CTriAry2D>(vector<Msh::CTriAry2D\,std::allocator<Msh::CTriAry2D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::CQuadAry2D,DelFEM4NetMsh::CQuadAry2D>(vector<Msh::CQuadAry2D\,std::allocator<Msh::CQuadAry2D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::CBarAry,DelFEM4NetMsh::CBarAry>(vector<Msh::CBarAry\,std::allocator<Msh::CBarAry> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::SVertex,DelFEM4NetMsh::SVertex>(vector<Msh::SVertex\,std::allocator<Msh::SVertex> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToVector<unsigned int>(vector<unsigned int\,std::allocator<unsigned int> >*, IList`1): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetFem::Field::View::CEdgeTextureColor,Fem::Field::View::CEdgeTextureColor>(IList`1, vector<Fem::Field::View::CEdgeTextureColor\,std::allocator<Fem::Field::View::CEdgeTextureColor> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Fem::Field::View::CEdgeTextureColor,DelFEM4NetFem::Field::View::CEdgeTextureColor>(vector<Fem::Field::View::CEdgeTextureColor\,std::allocator<Fem::Field::View::CEdgeTextureColor> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToVector<int>(IList`1, vector<int\,std::allocator<int> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetFem::Field::CField::CElemInterpolation,Fem::Field::CField::CElemInterpolation>(IList`1, vector<Fem::Field::CField::CElemInterpolation\,std::allocator<Fem::Field::CField::CElemInterpolation> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetMsh::STet,Msh::STet>(IList`1, vector<Msh::STet\,std::allocator<Msh::STet> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetMsh::SHex,Msh::SHex>(IList`1, vector<Msh::SHex\,std::allocator<Msh::SHex> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetMsh::STri3D,Msh::STri3D>(IList`1, vector<Msh::STri3D\,std::allocator<Msh::STri3D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetMsh::SQuad3D,Msh::SQuad3D>(IList`1, vector<Msh::SQuad3D\,std::allocator<Msh::SQuad3D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::STet,DelFEM4NetMsh::STet>(vector<Msh::STet\,std::allocator<Msh::STet> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::SHex,DelFEM4NetMsh::SHex>(vector<Msh::SHex\,std::allocator<Msh::SHex> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::STri3D,DelFEM4NetMsh::STri3D>(vector<Msh::STri3D\,std::allocator<Msh::STri3D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::SQuad3D,DelFEM4NetMsh::SQuad3D>(vector<Msh::SQuad3D\,std::allocator<Msh::SQuad3D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::CTetAry,DelFEM4NetMsh::CTetAry>(vector<Msh::CTetAry\,std::allocator<Msh::CTetAry> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::CHexAry,DelFEM4NetMsh::CHexAry>(vector<Msh::CHexAry\,std::allocator<Msh::CHexAry> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::CTriAry3D,DelFEM4NetMsh::CTriAry3D>(vector<Msh::CTriAry3D\,std::allocator<Msh::CTriAry3D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::CQuadAry3D,DelFEM4NetMsh::CQuadAry3D>(vector<Msh::CQuadAry3D\,std::allocator<Msh::CQuadAry3D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::CBarAry3D,DelFEM4NetMsh::CBarAry3D>(vector<Msh::CBarAry3D\,std::allocator<Msh::CBarAry3D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Msh::SVertex3D,DelFEM4NetMsh::SVertex3D>(vector<Msh::SVertex3D\,std::allocator<Msh::SVertex3D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    InstanceVectorToList<Com::CVector3D,DelFEM4NetCom::CVector3D>(vector<Com::CVector3D\,std::allocator<Com::CVector3D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector_NoCreate<DelFEM4NetRigid::CRigidBody3D,Rigid::CRigidBody3D>(IList`1, vector<Rigid::CRigidBody3D\,std::allocator<Rigid::CRigidBody3D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector_NoCreate<DelFEM4NetRigid::CRigidBody3D,Rigid::CRigidBody3D>(vector<Rigid::CRigidBody3D\,std::allocator<Rigid::CRigidBody3D> >*, IList`1): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetRigid::CRigidBody3D,Rigid::CRigidBody3D>(IList`1, vector<Rigid::CRigidBody3D\,std::allocator<Rigid::CRigidBody3D> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstanceVector<DelFEM4NetRigid::CRigidBody3D,Rigid::CRigidBody3D>(vector<Rigid::CRigidBody3D\,std::allocator<Rigid::CRigidBody3D> >*, IList`1): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetCom.Pair`2[T,U]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  Type parameter: U
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T, U): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    U Second   'get set' : 
    T First    'get set' : 
  Methods:
    get_First(): PrivateScope, Public, HideBySig, SpecialName
    set_First(T): PrivateScope, Public, HideBySig, SpecialName
    get_Second(): PrivateScope, Public, HideBySig, SpecialName
    set_Second(U): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.NativeArrayIndexer<double>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.NativeArrayIndexer<double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Double*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[System.Double]
    System.Collections.Generic.ICollection`1[System.Double]
    System.Collections.Generic.IEnumerable`1[System.Double]
    System.Collections.IEnumerable
    System.IDisposable
  Properties:
    System.Object SyncRoot 'get ' : 
    Boolean IsSyncronized 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 Count 'get ' : 
    Double Item [Int32] 'get set' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSyncronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Double[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.DoubleArrayIndexer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.NativeArrayIndexer<double>
    Void .ctor(DelFEM4NetCom.DoubleArrayIndexer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Double*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetCom.NativeArrayIndexer<unsigned int>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.NativeArrayIndexer<unsigned int>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, UInt32*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[System.UInt32]
    System.Collections.Generic.ICollection`1[System.UInt32]
    System.Collections.Generic.IEnumerable`1[System.UInt32]
    System.Collections.IEnumerable
    System.IDisposable
  Properties:
    System.Object SyncRoot 'get ' : 
    Boolean IsSyncronized 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 Count 'get ' : 
    UInt32 Item [Int32] 'get set' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSyncronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(UInt32[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.UIntArrayIndexer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.NativeArrayIndexer<unsigned int>
    Void .ctor(DelFEM4NetCom.UIntArrayIndexer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, UInt32*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetCom.ConstNativeArrayIndexer<unsigned int>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.ConstNativeArrayIndexer<unsigned int>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, UInt32*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[System.UInt32]
    System.Collections.Generic.ICollection`1[System.UInt32]
    System.Collections.Generic.IEnumerable`1[System.UInt32]
    System.Collections.IEnumerable
    System.IDisposable
  Properties:
    System.Object SyncRoot 'get ' : 
    Boolean IsSyncronized 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 Count 'get ' : 
    UInt32 Item [Int32] 'get set' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSyncronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(UInt32[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.ConstUIntArrayIndexer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.ConstNativeArrayIndexer<unsigned int>
    Void .ctor(DelFEM4NetCom.ConstUIntArrayIndexer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, UInt32*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetCom.ConstNativeArrayIndexer<double>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.ConstNativeArrayIndexer<double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Double*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[System.Double]
    System.Collections.Generic.ICollection`1[System.Double]
    System.Collections.Generic.IEnumerable`1[System.Double]
    System.Collections.IEnumerable
    System.IDisposable
  Properties:
    System.Object SyncRoot 'get ' : 
    Boolean IsSyncronized 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 Count 'get ' : 
    Double Item [Int32] 'get set' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSyncronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Double[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.ConstDoubleArrayIndexer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.ConstNativeArrayIndexer<double>
    Void .ctor(DelFEM4NetCom.ConstDoubleArrayIndexer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Double*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetCom.VectorIndexer<unsigned int>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.VectorIndexer<unsigned int>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(std.vector<unsigned int\,std::allocator<unsigned int> >*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[System.UInt32]
    System.Collections.Generic.ICollection`1[System.UInt32]
    System.Collections.Generic.IEnumerable`1[System.UInt32]
    System.Collections.IEnumerable
    System.IDisposable
  Properties:
    System.Object SyncRoot 'get ' : 
    Boolean IsSyncronized 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 Count 'get ' : 
    UInt32 Item [Int32] 'get set' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSyncronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(UInt32[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.UIntVectorIndexer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.VectorIndexer<unsigned int>
    Void .ctor(DelFEM4NetCom.UIntVectorIndexer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(std.vector<unsigned int\,std::allocator<unsigned int> >*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetCom.ConstPairVectorIndexer<unsigned int\,double>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.ConstPairVectorIndexer<unsigned int\,double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(std.vector<std::pair<unsigned int\,double>\,std::allocator<std::pair<unsigned int\,double> > >*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[DelFEM4NetCom.Pair`2[System.UInt32,System.Double]]
    System.Collections.Generic.ICollection`1[DelFEM4NetCom.Pair`2[System.UInt32,System.Double]]
    System.Collections.Generic.IEnumerable`1[DelFEM4NetCom.Pair`2[System.UInt32,System.Double]]
    System.Collections.IEnumerable
    System.IDisposable
  Properties:
    System.Object SyncRoot 'get ' : 
    Boolean IsSyncronized 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 Count 'get ' : 
    DelFEM4NetCom.Pair`2[System.UInt32,System.Double] Item [Int32] 'get set' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSyncronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(Pair`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Pair`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Pair`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, Pair`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Pair`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Pair`2[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.ConstUIntDoublePairVectorIndexer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.ConstPairVectorIndexer<unsigned int\,double>
    Void .ctor(DelFEM4NetCom.ConstPairVectorIndexer<unsigned int\,double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(std.vector<std::pair<unsigned int\,double>\,std::allocator<std::pair<unsigned int\,double> > >*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetCad.CUseLoop: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Cad.CUseLoop*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CUseLoop): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32, UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    UInt32 id_ul_p 'get set' : 
    UInt32 id_ul_c 'get set' : 
    UInt32 id_he 'get set' : 
    UInt32 id_l 'get set' : 
    UInt32 id  'get set' : 
    Cad.CUseLoop* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_l(): PrivateScope, Public, HideBySig, SpecialName
    set_id_l(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_he(): PrivateScope, Public, HideBySig, SpecialName
    set_id_he(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_ul_c(): PrivateScope, Public, HideBySig, SpecialName
    set_id_ul_c(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_ul_p(): PrivateScope, Public, HideBySig, SpecialName
    set_id_ul_p(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CHalfEdge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Cad.CHalfEdge*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CHalfEdge): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean is_same_dir 'get set' : 
    UInt32 id_e 'get set' : 
    UInt32 id_ul 'get set' : 
    UInt32 id_he_o 'get set' : 
    UInt32 id_he_b 'get set' : 
    UInt32 id_he_f 'get set' : 
    UInt32 id_uv 'get set' : 
    UInt32 id  'get set' : 
    Cad.CHalfEdge* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_uv(): PrivateScope, Public, HideBySig, SpecialName
    set_id_uv(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_he_f(): PrivateScope, Public, HideBySig, SpecialName
    set_id_he_f(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_he_b(): PrivateScope, Public, HideBySig, SpecialName
    set_id_he_b(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_he_o(): PrivateScope, Public, HideBySig, SpecialName
    set_id_he_o(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_ul(): PrivateScope, Public, HideBySig, SpecialName
    set_id_ul(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_e(): PrivateScope, Public, HideBySig, SpecialName
    set_id_e(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_is_same_dir(): PrivateScope, Public, HideBySig, SpecialName
    set_is_same_dir(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CUseVertex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Cad.CUseVertex*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CUseVertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    UInt32 id_v 'get set' : 
    UInt32 id_he 'get set' : 
    UInt32 id  'get set' : 
    Cad.CUseVertex* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_he(): PrivateScope, Public, HideBySig, SpecialName
    set_id_he(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_v(): PrivateScope, Public, HideBySig, SpecialName
    set_id_v(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CBRep: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Cad.CBRep*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CBRep): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Cad.CBRep* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    IsID_UseLoop(UInt32): PrivateScope, Public, HideBySig
    IsID_HalfEdge(UInt32): PrivateScope, Public, HideBySig
    IsID_UseVertex(UInt32): PrivateScope, Public, HideBySig
    GetAry_UseVertexID(): PrivateScope, Public, HideBySig
    GetUseLoop(UInt32): PrivateScope, Public, HideBySig
    GetUseVertex(UInt32): PrivateScope, Public, HideBySig
    GetHalfEdge(UInt32): PrivateScope, Public, HideBySig
    SetLoopIDtoUseLoop(UInt32, UInt32): PrivateScope, Public, HideBySig
    SetVertexIDtoUseVertex(UInt32, UInt32): PrivateScope, Public, HideBySig
    SetEdgeIDtoHalfEdge(UInt32, UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AssertValid_Use(): PrivateScope, Public, HideBySig
    FindHalfEdge_Edge(UInt32): PrivateScope, Public, HideBySig
    FindHalfEdge_Vertex(UInt32): PrivateScope, Public, HideBySig
    MEVVL(UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out)): PrivateScope, Public, HideBySig
    MEL(UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32, UInt32): PrivateScope, Public, HideBySig
    KEL(UInt32): PrivateScope, Public, HideBySig
    MEV(UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32): PrivateScope, Public, HideBySig
    KVE(UInt32): PrivateScope, Public, HideBySig
    MVE(UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32): PrivateScope, Public, HideBySig
    MEKL(UInt32&(Out), UInt32&(Out), UInt32, UInt32): PrivateScope, Public, HideBySig
    KEML(UInt32&(Out), UInt32): PrivateScope, Public, HideBySig
    MEKL_OneFloatingVertex(UInt32&(Out), UInt32, UInt32): PrivateScope, Public, HideBySig
    MEKL_TwoFloatingVertex(UInt32, UInt32): PrivateScope, Public, HideBySig
    KEML_OneFloatingVertex(UInt32&(Out), UInt32): PrivateScope, Public, HideBySig
    KEML_TwoFloatingVertex(UInt32&(Out), UInt32): PrivateScope, Public, HideBySig
    MVEL(UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32): PrivateScope, Public, HideBySig
    KVEL(UInt32): PrivateScope, Public, HideBySig
    SwapUseLoop(UInt32, UInt32): PrivateScope, Public, HideBySig
    MoveUseLoop(UInt32, UInt32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.NativeArrayIndexer<double>+NativeArrayIndexerEnumerator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.NativeArrayIndexer<double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[System.Double]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Object CurrentNoGeneric 'get ' : 
    Double Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentNoGeneric(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.NativeArrayIndexer<unsigned int>+NativeArrayIndexerEnumerator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.NativeArrayIndexer<unsigned int>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[System.UInt32]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Object CurrentNoGeneric 'get ' : 
    UInt32 Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentNoGeneric(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.ConstNativeArrayIndexer<unsigned int>+ConstNativeArrayIndexerEnumerator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.ConstNativeArrayIndexer<unsigned int>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[System.UInt32]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Object CurrentNoGeneric 'get ' : 
    UInt32 Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentNoGeneric(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.ConstNativeArrayIndexer<double>+ConstNativeArrayIndexerEnumerator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.ConstNativeArrayIndexer<double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[System.Double]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Object CurrentNoGeneric 'get ' : 
    Double Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentNoGeneric(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.VectorIndexer<unsigned int>+VectorIndexerEnumerator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.VectorIndexer<unsigned int>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[System.UInt32]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Object CurrentNoGeneric 'get ' : 
    UInt32 Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentNoGeneric(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.ConstPairVectorIndexer<unsigned int\,double>+ConstPairVectorIndexerEnumerator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.ConstPairVectorIndexer<unsigned int\,double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[DelFEM4NetCom.Pair`2[System.UInt32,System.Double]]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Object CurrentNoGeneric 'get ' : 
    DelFEM4NetCom.Pair`2[System.UInt32,System.Double] Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentNoGeneric(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Interface DelFEM4NetCad.IItrLoop: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    Begin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    op_Increment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    op_Increment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Increment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIdEdge(UInt32&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ShiftChildLoop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsEndChild(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIdVertex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIdVertex_Ahead(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIdVertex_Behind(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DelFEM4NetCad.IItrVertex: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    op_Increment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    op_Increment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Increment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIdEdge_Ahead(UInt32&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIdEdge_Behind(UInt32&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIdLoop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DelFEM4NetCom.CSerializer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Com.CSerializer* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    IsLoading(): PrivateScope, Public, HideBySig
    Get(String, Object[]): PrivateScope, Public, HideBySig
    GetLine(): PrivateScope, Public, HideBySig
    Out(String, Object[]): PrivateScope, Public, HideBySig
    ReadDepthClassName(): PrivateScope, Public, HideBySig
    WriteDepthClassName(String): PrivateScope, Public, HideBySig
    ShiftDepth(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetDepth(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CBRepSurface: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Cad.CBRepSurface*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Cad.CBRepSurface* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    AssertValid(): PrivateScope, Public, HideBySig
    IsElemID(CAD_ELEM_TYPE, UInt32): PrivateScope, Public, HideBySig
    GetAryElemID(CAD_ELEM_TYPE): PrivateScope, Public, HideBySig
    GetIdLoop_Edge(UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetIdLoop_Edge(UInt32, UInt32&(Out), UInt32&(Out)): PrivateScope, Public, HideBySig
    GetIdVertex_Edge(UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetIdVertex_Edge(UInt32, UInt32&(Out), UInt32&(Out)): PrivateScope, Public, HideBySig
    GetItrLoop(UInt32): PrivateScope, Public, HideBySig
    GetItrLoop_SideEdge(UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetItrVertex(UInt32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    AddVertex_Edge(UInt32): PrivateScope, Public, HideBySig
    AddVertex_Loop(UInt32): PrivateScope, Public, HideBySig
    RemoveEdge(UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RemoveVertex(UInt32): PrivateScope, Public, HideBySig
    MakeHole_fromLoop(UInt32): PrivateScope, Public, HideBySig
    SealHole(UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ConnectVertex(CItrVertex, CItrVertex, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetItrLoop_ConnectVertex(CItrVertex, CItrVertex): PrivateScope, Public, HideBySig
    GetItrLoop_RemoveEdge(UInt32): PrivateScope, Public, HideBySig
    SwapItrLoop(CItrLoop, UInt32): PrivateScope, Public, HideBySig
    Serialize(CSerializer): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CBRepSurface+CItrLoop: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(CItrLoop*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CBRepSurface, UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CBRepSurface, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetCad.IItrLoop
    System.IDisposable
  Properties:
    CItrLoop* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Begin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    op_Increment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    op_Increment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Increment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdEdge(UInt32&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShiftChildLoop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEndChild(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdVertex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdVertex_Ahead(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdVertex_Behind(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdHalfEdge(): PrivateScope, Public, HideBySig
    GetIdUseLoop(): PrivateScope, Public, HideBySig
    GetIdLoop(): PrivateScope, Public, HideBySig
    GetType(): PrivateScope, Public, HideBySig
    CountVertex_UseLoop(): PrivateScope, Public, HideBySig
    IsParent(): PrivateScope, Public, HideBySig
    IsSameUseLoop(CItrLoop): PrivateScope, Public, HideBySig
    IsEdge_BothSideSameLoop(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CBRepSurface+CItrVertex: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(CItrVertex*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CBRepSurface, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetCad.IItrVertex
    System.IDisposable
  Properties:
    CItrVertex* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    op_Increment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    op_Increment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Increment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdEdge_Ahead(UInt32&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdEdge_Behind(UInt32&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdLoop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Begin(): PrivateScope, Public, HideBySig
    IsEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdHalfEdge(): PrivateScope, Public, HideBySig
    GetIdUseVertex(): PrivateScope, Public, HideBySig
    CountEdge(): PrivateScope, Public, HideBySig
    IsParent(): PrivateScope, Public, HideBySig
    IsSameUseLoop(CItrVertex): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CBRepSurface+CResConnectVertex: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(CResConnectVertex*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean is_left_l_add 'get set' : 
    UInt32 id_l_add 'get set' : 
    UInt32 id_e_add 'get set' : 
    UInt32 id_l 'get set' : 
    UInt32 id_v2 'get set' : 
    UInt32 id_v1 'get set' : 
    CResConnectVertex* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id_v1(): PrivateScope, Public, HideBySig, SpecialName
    set_id_v1(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_v2(): PrivateScope, Public, HideBySig, SpecialName
    set_id_v2(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_l(): PrivateScope, Public, HideBySig, SpecialName
    set_id_l(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_e_add(): PrivateScope, Public, HideBySig, SpecialName
    set_id_e_add(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_l_add(): PrivateScope, Public, HideBySig, SpecialName
    set_id_l_add(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_is_left_l_add(): PrivateScope, Public, HideBySig, SpecialName
    set_is_left_l_add(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct DelFEM4NetCad.CAD_ELEM_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DelFEM4NetCad.CAD_ELEM_TYPE NOT_SET = 0 : Public, Static, Literal, HasDefault
    DelFEM4NetCad.CAD_ELEM_TYPE VERTEX = 1 : Public, Static, Literal, HasDefault
    DelFEM4NetCad.CAD_ELEM_TYPE EDGE = 2 : Public, Static, Literal, HasDefault
    DelFEM4NetCad.CAD_ELEM_TYPE LOOP = 3 : Public, Static, Literal, HasDefault
    DelFEM4NetCad.CAD_ELEM_TYPE SOLID = 4 : Public, Static, Literal, HasDefault
Class DelFEM4NetCom.CVector2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.CVector2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Com.CVector2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 C_VEC_SIZE : Public, Static
  Properties:
    Double y   'get set' : 
    Double x   'get set' : 
    Com.CVector2D* Self 'get ' : 
  Methods:
    op_Multiply(CVector2D, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, CVector2D): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryPlus(): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(CVector2D): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(CVector2D, CVector2D): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(): PrivateScope, Public, HideBySig, SpecialName
    op_Subtraction(CVector2D): PrivateScope, Public, HideBySig, SpecialName
    op_Subtraction(CVector2D, CVector2D): PrivateScope, Public, Static, HideBySig, SpecialName
    TriArea(Int32, Int32, Int32, IList`1): PrivateScope, Public, Static, HideBySig
    TriArea(CVector2D, CVector2D, CVector2D): PrivateScope, Public, Static, HideBySig
    SquareLength(CVector2D): PrivateScope, Public, Static, HideBySig
    SquareLength(CVector2D, CVector2D): PrivateScope, Public, Static, HideBySig
    Length(): PrivateScope, Public, HideBySig
    Length(CVector2D): PrivateScope, Public, Static, HideBySig
    Distance(CVector2D, CVector2D): PrivateScope, Public, Static, HideBySig
    TriHeight(CVector2D, CVector2D, CVector2D): PrivateScope, Public, Static, HideBySig
    Dot(CVector2D, CVector2D): PrivateScope, Public, Static, HideBySig
    SquareCircumradius(CVector2D, CVector2D, CVector2D): PrivateScope, Public, Static, HideBySig
    CenterCircumcircle(CVector2D, CVector2D, CVector2D, CVector2D&): PrivateScope, Public, Static, HideBySig
    DetDelaunay(CVector2D, CVector2D, CVector2D, CVector2D): PrivateScope, Public, HideBySig
    TriArea2D(Double[], Double[], Double[]): PrivateScope, Public, Static, HideBySig
    SqDistance2D(Double[], Double[]): PrivateScope, Public, Static, HideBySig
    Distance2D(Double[], Double[]): PrivateScope, Public, Static, HideBySig
    op_AdditionAssignment(CVector2D): PrivateScope, Public, HideBySig, SpecialName
    op_SubtractionAssignment(CVector2D IsConst): PrivateScope, Public, HideBySig, SpecialName
    op_MultiplicationAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Normalize(): PrivateScope, Public, HideBySig
    SetZero(): PrivateScope, Public, HideBySig
    SqLength(): PrivateScope, Public, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_x(): PrivateScope, Public, HideBySig, SpecialName
    set_x(Double): PrivateScope, Public, HideBySig, SpecialName
    get_y(): PrivateScope, Public, HideBySig, SpecialName
    set_y(Double): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.CBoundingBox2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.CBoundingBox2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Com.CBoundingBox2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean isnt_empty 'get set' : 
    Double y_max 'get set' : 
    Double y_min 'get set' : 
    Double x_max 'get set' : 
    Double x_min 'get set' : 
    Com.CBoundingBox2D* Self 'get ' : 
  Methods:
    op_AdditionAssignment(CBoundingBox2D): PrivateScope, Public, HideBySig, SpecialName
    IsInside(CVector2D): PrivateScope, Public, HideBySig
    IsIntersectSphere(CVector2D, Double): PrivateScope, Public, HideBySig
    IsIntersect(CBoundingBox2D, Double): PrivateScope, Public, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_x_min(): PrivateScope, Public, HideBySig, SpecialName
    set_x_min(Double): PrivateScope, Public, HideBySig, SpecialName
    get_x_max(): PrivateScope, Public, HideBySig, SpecialName
    set_x_max(Double): PrivateScope, Public, HideBySig, SpecialName
    get_y_min(): PrivateScope, Public, HideBySig, SpecialName
    set_y_min(Double): PrivateScope, Public, HideBySig, SpecialName
    get_y_max(): PrivateScope, Public, HideBySig, SpecialName
    set_y_max(Double): PrivateScope, Public, HideBySig, SpecialName
    get_isnt_empty(): PrivateScope, Public, HideBySig, SpecialName
    set_isnt_empty(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.NativeInstanceArrayIndexer<Com::CVector2D\,DelFEM4NetCom::CVector2D\,DelFEM4NetCom::CVector2D ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.NativeInstanceArrayIndexer<Com::CVector2D\,DelFEM4NetCom::CVector2D\,DelFEM4NetCom::CVector2D ^>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Com.CVector2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[DelFEM4NetCom.CVector2D]
    System.Collections.Generic.ICollection`1[DelFEM4NetCom.CVector2D]
    System.Collections.Generic.IEnumerable`1[DelFEM4NetCom.CVector2D]
    System.Collections.IEnumerable
    System.IDisposable
  Properties:
    System.Object SyncRoot 'get ' : 
    Boolean IsSyncronized 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 Count 'get ' : 
    DelFEM4NetCom.CVector2D Item [Int32] 'get set' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, CVector2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSyncronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(CVector2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(CVector2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(CVector2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, CVector2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(CVector2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(CVector2D[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.CVector2DArrayIndexer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.NativeInstanceArrayIndexer<Com::CVector2D\,DelFEM4NetCom::CVector2D\,DelFEM4NetCom::CVector2D ^>
    Void .ctor(DelFEM4NetCom.CVector2DArrayIndexer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Com.CVector2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetCad.CLoop2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Cad.CLoop2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CLoop2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    UInt32 ilayer 'get set' : 
    Double[] m_color 'get set' : 
    Cad.CLoop2D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_m_color(): PrivateScope, Public, HideBySig, SpecialName
    set_m_color(Double[]): PrivateScope, Public, HideBySig, SpecialName
    get_ilayer(): PrivateScope, Public, HideBySig, SpecialName
    set_ilayer(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CEdge2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Cad.CEdge2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CEdge2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Cad.CEdge2D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetVtxCoords(CVector2D, CVector2D): PrivateScope, Public, HideBySig
    SetIdVtx(UInt32, UInt32): PrivateScope, Public, HideBySig
    Distance(CEdge2D): PrivateScope, Public, HideBySig
    GetBoundingBox(): PrivateScope, Public, HideBySig
    IsCrossEdgeSelf(): PrivateScope, Public, HideBySig
    IsCrossEdge(CEdge2D): PrivateScope, Public, HideBySig
    IsCrossEdge_ShareOnePoint(CEdge2D, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsCrossEdge_ShareBothPoints(CEdge2D, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AreaEdge(): PrivateScope, Public, HideBySig
    GetTangentEdge(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetNearestPoint(CVector2D): PrivateScope, Public, HideBySig
    NumIntersect_AgainstHalfLine(CVector2D, CVector2D): PrivateScope, Public, HideBySig
    GetNearestIntersectionPoint_AgainstHalfLine(CVector2D&, CVector2D, CVector2D): PrivateScope, Public, HideBySig
    GetCurveAsPolyline(IList`1&, Int32): PrivateScope, Public, HideBySig
    GetCurveLength(): PrivateScope, Public, HideBySig
    GetCurve_Arc(Boolean&, Double&): PrivateScope, Public, HideBySig
    GetCenterRadius(CVector2D&, Double&): PrivateScope, Public, HideBySig
    GetCenterRadiusThetaLXY(CVector2D&, Double&, Double&, CVector2D&, CVector2D&): PrivateScope, Public, HideBySig
    Split(CEdge2D&, CVector2D): PrivateScope, Public, HideBySig
    ConnectEdge(CEdge2D, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetPointOnCurve_OnCircle(CVector2D, Double, Boolean(HasFieldMarshal), Boolean&, CVector2D&): PrivateScope, Public, HideBySig
    GetCurveType(): PrivateScope, Public, HideBySig
    SetCurve_Line(): PrivateScope, Public, HideBySig
    SetCurve_Arc(Boolean(HasFieldMarshal), Double): PrivateScope, Public, HideBySig
    SetCurve_Polyline(IList`1): PrivateScope, Public, HideBySig
    SetCurve_Bezier(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    GetCurve_Polyline(): PrivateScope, Public, HideBySig
    GetCurve_Bezier(Double[]&): PrivateScope, Public, HideBySig
    GetIdVtx(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetVtxCoord(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetColor(Double[]&(Out)): PrivateScope, Public, HideBySig
    SetColor(Double[]): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CVertex2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Cad.CVertex2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CVertex2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.CVector2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Double[] m_color 'get set' : 
    DelFEM4NetCom.CVector2D point 'get set' : 
    Cad.CVertex2D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_point(): PrivateScope, Public, HideBySig, SpecialName
    set_point(CVector2D): PrivateScope, Public, HideBySig, SpecialName
    get_m_color(): PrivateScope, Public, HideBySig, SpecialName
    set_m_color(Double[]): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.NativeInstanceArrayIndexer<Com::CVector2D\,DelFEM4NetCom::CVector2D\,DelFEM4NetCom::CVector2D ^>+NativeInstanceArrayIndexerEnumerator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.NativeInstanceArrayIndexer<Com::CVector2D\,DelFEM4NetCom::CVector2D\,DelFEM4NetCom::CVector2D ^>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[DelFEM4NetCom.CVector2D]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Object CurrentNoGeneric 'get ' : 
    DelFEM4NetCom.CVector2D Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentNoGeneric(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct DelFEM4NetCad.CURVE_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DelFEM4NetCad.CURVE_TYPE CURVE_END_POINT = 0 : Public, Static, Literal, HasDefault
    DelFEM4NetCad.CURVE_TYPE CURVE_LINE = 1 : Public, Static, Literal, HasDefault
    DelFEM4NetCad.CURVE_TYPE CURVE_ARC = 2 : Public, Static, Literal, HasDefault
    DelFEM4NetCad.CURVE_TYPE CURVE_POLYLINE = 3 : Public, Static, Literal, HasDefault
    DelFEM4NetCad.CURVE_TYPE CURVE_BEZIER = 4 : Public, Static, Literal, HasDefault
Class DelFEM4NetCom.CVector3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Com.CVector3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.CVector3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 C_VEC_SIZE : Public, Static
  Properties:
    Double z   'get set' : 
    Double y   'get set' : 
    Double x   'get set' : 
    Com.CVector3D* Self 'get ' : 
  Methods:
    Dot(CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    Cross(CVector3D&(Out), CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    Cross(CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    op_UnaryPlus(): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(): PrivateScope, Public, HideBySig, SpecialName
    op_Subtraction(CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(CVector3D, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, CVector3D): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(CVector3D, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    GetVertical2Vector(CVector3D, CVector3D&(Out), CVector3D&(Out)): PrivateScope, Public, Static, HideBySig
    ScalarTripleProduct3D(Double[], Double[], Double[]): PrivateScope, Public, Static, HideBySig
    Dot3D(Double[], Double[]): PrivateScope, Public, Static, HideBySig
    Cross3D(Double[]&(Out), Double[], Double[]): PrivateScope, Public, Static, HideBySig
    Length3D(Double[]): PrivateScope, Public, Static, HideBySig
    Distance3D(Double[], Double[]): PrivateScope, Public, Static, HideBySig
    TriArea3D(Double[], Double[], Double[]): PrivateScope, Public, Static, HideBySig
    UnitNormalAreaTri3D(Double[]&(Out), Double&(Out), Double[], Double[], Double[]): PrivateScope, Public, Static, HideBySig
    NormalTri3D(Double[]&(Out), Double[], Double[], Double[]): PrivateScope, Public, Static, HideBySig
    TetVolume3D(Double[], Double[], Double[], Double[]): PrivateScope, Public, Static, HideBySig
    GetVertical2Vector3D(Double[], Double[]&(Out), Double[]&(Out)): PrivateScope, Public, Static, HideBySig
    Height(CVector3D, CVector3D, CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    TetVolume(Int32, Int32, Int32, Int32, IList`1): PrivateScope, Public, Static, HideBySig
    TetVolume(CVector3D, CVector3D, CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    TriArea(Int32 IsConst, Int32 IsConst, Int32 IsConst, IList`1): PrivateScope, Public, Static, HideBySig
    TriArea(CVector3D, CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    SquareTriArea(CVector3D, CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    SquareDistance(CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    SquareLength(CVector3D): PrivateScope, Public, Static, HideBySig
    Length(): PrivateScope, Public, HideBySig
    Length(CVector3D): PrivateScope, Public, Static, HideBySig
    Distance(CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    SqareLongestEdgeLength(CVector3D, CVector3D, CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    LongestEdgeLength(CVector3D, CVector3D, CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    SqareShortestEdgeLength(CVector3D, CVector3D, CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    ShortestEdgeLength(CVector3D, CVector3D, CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    Normal(CVector3D&(Out), CVector3D, CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    UnitNormal(CVector3D&(Out), CVector3D, CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    SquareCircumradius(CVector3D, CVector3D, CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    Circumradius(CVector3D, CVector3D, CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    RotateVector(CVector3D, CVector3D): PrivateScope, Public, Static, HideBySig
    SetVector(Double, Double, Double): PrivateScope, Public, HideBySig
    op_AdditionAssignment(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    op_SubtractionAssignment(CVector3D IsConst): PrivateScope, Public, HideBySig, SpecialName
    op_MultiplicationAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    op_DivisionAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    DLength(): PrivateScope, Public, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    SetZero(): PrivateScope, Public, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_x(): PrivateScope, Public, HideBySig, SpecialName
    set_x(Double): PrivateScope, Public, HideBySig, SpecialName
    get_y(): PrivateScope, Public, HideBySig, SpecialName
    set_y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_z(): PrivateScope, Public, HideBySig, SpecialName
    set_z(Double): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.CMatrix3: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Com.CMatrix3*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.CVector3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.CMatrix3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 C_MAT_SIZE : Public, Static
    Int32 C_VEC_SIZE : Public, Static
  Properties:
    DelFEM4NetCom.DoubleArrayIndexer mat 'get ' : 
    Com.CMatrix3* Self 'get ' : 
  Methods:
    MatVec(Double[], Double[]&(Out)): PrivateScope, Public, HideBySig
    MatVec(CVector3D): PrivateScope, Public, HideBySig
    MatVecTrans(CVector3D): PrivateScope, Public, HideBySig
    MatVecTrans(Double[], Double[]&(Out)): PrivateScope, Public, HideBySig
    MatMat(CMatrix3): PrivateScope, Public, HideBySig
    MatMatTrans(CMatrix3): PrivateScope, Public, HideBySig
    SetRotMatrix_Rodrigues(Double[]): PrivateScope, Public, HideBySig
    SetRotMatrix_CRV(Double[]): PrivateScope, Public, HideBySig
    GetCRV_RotMatrix(Double[]&(Out)): PrivateScope, Public, HideBySig
    SetSpinTensor(CVector3D): PrivateScope, Public, HideBySig
    SetIdentity(Double): PrivateScope, Public, HideBySig
    SetIdentity(): PrivateScope, Public, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_mat(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.CBoundingBox3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Com.CBoundingBox3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.CBoundingBox3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 BB_SIZE : Public, Static
  Properties:
    Boolean isnt_empty 'get set' : 
    Double z_max 'get set' : 
    Double z_min 'get set' : 
    Double y_max 'get set' : 
    Double y_min 'get set' : 
    Double x_max 'get set' : 
    Double x_min 'get set' : 
    Com.CBoundingBox3D* Self 'get ' : 
  Methods:
    op_AdditionAssignment(CBoundingBox3D): PrivateScope, Public, HideBySig, SpecialName
    IsInside(CVector3D): PrivateScope, Public, HideBySig
    IsPossibilityIntersectSphere(CVector3D, Double IsConst): PrivateScope, Public, HideBySig
    AddPoint(CVector3D, Double): PrivateScope, Public, HideBySig
    SetValueToArray(Double[]&(Out)): PrivateScope, Public, HideBySig
    ProjectOnLine(Double&(Out), Double&(Out), CVector3D, CVector3D): PrivateScope, Public, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_x_min(): PrivateScope, Public, HideBySig, SpecialName
    set_x_min(Double): PrivateScope, Public, HideBySig, SpecialName
    get_x_max(): PrivateScope, Public, HideBySig, SpecialName
    set_x_max(Double): PrivateScope, Public, HideBySig, SpecialName
    get_y_min(): PrivateScope, Public, HideBySig, SpecialName
    set_y_min(Double): PrivateScope, Public, HideBySig, SpecialName
    get_y_max(): PrivateScope, Public, HideBySig, SpecialName
    set_y_max(Double): PrivateScope, Public, HideBySig, SpecialName
    get_z_min(): PrivateScope, Public, HideBySig, SpecialName
    set_z_min(Double): PrivateScope, Public, HideBySig, SpecialName
    get_z_max(): PrivateScope, Public, HideBySig, SpecialName
    set_z_max(Double): PrivateScope, Public, HideBySig, SpecialName
    get_isnt_empty(): PrivateScope, Public, HideBySig, SpecialName
    set_isnt_empty(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.COctTree: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Com.COctTree*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.COctTree): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Com.COctTree* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetBoundingBox(CBoundingBox3D): PrivateScope, Public, HideBySig
    InsertPoint(UInt32, CVector3D): PrivateScope, Public, HideBySig
    Check(): PrivateScope, Public, HideBySig
    GetIndexCell_IncludePoint(CVector3D): PrivateScope, Public, HideBySig
    GetAllPointInCell(UInt32, IList`1&(Out)): PrivateScope, Public, HideBySig
    GetBoundaryOfCell(UInt32, CBoundingBox3D&(Out)): PrivateScope, Public, HideBySig
    IsPointInSphere(Double, CVector3D): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.NativeInstanceArrayIndexer<Com::CVector3D\,DelFEM4NetCom::CVector3D\,DelFEM4NetCom::CVector3D ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.NativeInstanceArrayIndexer<Com::CVector3D\,DelFEM4NetCom::CVector3D\,DelFEM4NetCom::CVector3D ^>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Com.CVector3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[DelFEM4NetCom.CVector3D]
    System.Collections.Generic.ICollection`1[DelFEM4NetCom.CVector3D]
    System.Collections.Generic.IEnumerable`1[DelFEM4NetCom.CVector3D]
    System.Collections.IEnumerable
    System.IDisposable
  Properties:
    System.Object SyncRoot 'get ' : 
    Boolean IsSyncronized 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 Count 'get ' : 
    DelFEM4NetCom.CVector3D Item [Int32] 'get set' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, CVector3D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSyncronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(CVector3D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(CVector3D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(CVector3D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, CVector3D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(CVector3D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(CVector3D[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.CVector3DArrayIndexer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.NativeInstanceArrayIndexer<Com::CVector3D\,DelFEM4NetCom::CVector3D\,DelFEM4NetCom::CVector3D ^>
    Void .ctor(DelFEM4NetCom.CVector3DArrayIndexer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Com.CVector3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetCad.CLoop3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.CVector3D, DelFEM4NetCom.CVector3D, DelFEM4NetCom.CVector3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Cad.CLoop3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CLoop3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DelFEM4NetCom.CBoundingBox3D bb_ 'get set' : 
    System.Collections.Generic.IList`1[System.UInt32] aIndEdge 'get set' : 
    System.Collections.Generic.IList`1[DelFEM4NetCom.Pair`2[DelFEM4NetCad.CEdge2D,System.Boolean]] aEdge 'get set' : 
    DelFEM4NetCom.CVector3D dirx 'get set' : 
    DelFEM4NetCom.CVector3D normal 'get set' : 
    DelFEM4NetCom.CVector3D org 'get set' : 
    Cad.CLoop3D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Project(CVector3D): PrivateScope, Public, HideBySig
    UnProject(CVector2D): PrivateScope, Public, HideBySig
    GetNearestPoint(CVector3D): PrivateScope, Public, HideBySig
    NumIntersecRay(CVector3D, CVector3D): PrivateScope, Public, HideBySig
    GetBoundingBox(): PrivateScope, Public, HideBySig
    get_org(): PrivateScope, Public, HideBySig, SpecialName
    set_org(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_normal(): PrivateScope, Public, HideBySig, SpecialName
    set_normal(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_dirx(): PrivateScope, Public, HideBySig, SpecialName
    set_dirx(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_aEdge(): PrivateScope, Public, HideBySig, SpecialName
    set_aEdge(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_aIndEdge(): PrivateScope, Public, HideBySig, SpecialName
    set_aIndEdge(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_bb_(): PrivateScope, Public, HideBySig, SpecialName
    set_bb_(CBoundingBox3D): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CEdge3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Cad.CEdge3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CEdge3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DelFEM4NetCom.CVector3D po_e 'get set' : 
    DelFEM4NetCom.CVector3D po_s 'get set' : 
    UInt32 id_v_e 'get set' : 
    UInt32 id_v_s 'get set' : 
    Cad.CEdge3D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id_v_s(): PrivateScope, Public, HideBySig, SpecialName
    set_id_v_s(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_v_e(): PrivateScope, Public, HideBySig, SpecialName
    set_id_v_e(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_po_s(): PrivateScope, Public, HideBySig, SpecialName
    set_po_s(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_po_e(): PrivateScope, Public, HideBySig, SpecialName
    set_po_e(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CVertex3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.CVector3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Cad.CVertex3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CVertex3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DelFEM4NetCom.CVector3D point 'get set' : 
    Cad.CVertex3D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_point(): PrivateScope, Public, HideBySig, SpecialName
    set_point(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.NativeInstanceArrayIndexer<Com::CVector3D\,DelFEM4NetCom::CVector3D\,DelFEM4NetCom::CVector3D ^>+NativeInstanceArrayIndexerEnumerator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.NativeInstanceArrayIndexer<Com::CVector3D\,DelFEM4NetCom::CVector3D\,DelFEM4NetCom::CVector3D ^>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[DelFEM4NetCom.CVector3D]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Object CurrentNoGeneric 'get ' : 
    DelFEM4NetCom.CVector3D Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentNoGeneric(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Interface DelFEM4NetCad.ICad2D_Msh: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    Cad.ICad2D_Msh* Cad2DMshSelf 'get ' : 
  Methods:
    get_Cad2DMshSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetIdVertex_Edge(UInt32&, UInt32&, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsElemID(CAD_ELEM_TYPE, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAryElemID(CAD_ELEM_TYPE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetLayer(CAD_ELEM_TYPE, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetLayerMinMax(Int32&, Int32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetColor_Loop(UInt32, Double[]&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetArea_Loop(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPtrItrLoop(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCurveAsPolyline(UInt32, IList`1&, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetVertexCoord(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DelFEM4NetCad.CCadObj2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Cad.CCadObj2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CCadObj2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetCad.ICad2D_Msh
    System.IDisposable
  Properties:
    Cad.CCadObj2D* Self 'get ' : 
    Cad.ICad2D_Msh* Cad2DMshSelf 'get ' : 
  Methods:
    get_Cad2DMshSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    GetPtrItrLoop(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsElemID(CAD_ELEM_TYPE, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAryElemID(CAD_ELEM_TYPE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdVertex_Edge(UInt32&(Out), UInt32&(Out), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdLoop_Edge(UInt32&(Out), UInt32&(Out), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetItrVertex(UInt32): PrivateScope, Public, HideBySig
    GetItrLoop(UInt32): PrivateScope, Public, HideBySig
    GetLayer(CAD_ELEM_TYPE, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLayerMinMax(Int32&, Int32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShiftLayer_Loop(UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetMinClearance(): PrivateScope, Public, HideBySig
    CheckIsPointInsideLoop(UInt32, CVector2D): PrivateScope, Public, HideBySig
    SignedDistPointLoop(UInt32, CVector2D, UInt32): PrivateScope, Public, HideBySig
    SignedDistPointLoop(UInt32, CVector2D): PrivateScope, Public, HideBySig
    GetColor_Loop(UInt32, Double[]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColor_Loop(UInt32, Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetArea_Loop(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEdge(UInt32): PrivateScope, Public, HideBySig
    GetEdgeCurveType(UInt32 IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCurveAsPolyline(UInt32, IList`1&, UInt32, CVector2D, CVector2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCurveAsPolyline(UInt32, IList`1&, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCurveAsPolyline(UInt32, IList`1&): PrivateScope, Public, HideBySig
    GetPointOnCurve_OnCircle(UInt32, CVector2D, Double, Boolean(HasFieldMarshal), Boolean&, CVector2D&): PrivateScope, Public, HideBySig
    GetNearestPoint(UInt32, CVector2D): PrivateScope, Public, HideBySig
    GetColor_Edge(UInt32, Double[]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColor_Edge(UInt32, Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetVertexCoord(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetColor_Vertex(UInt32, Double[]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColor_Vertex(UInt32, Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPolygon(IList`1, UInt32): PrivateScope, Public, HideBySig
    AddPolygon(IList`1): PrivateScope, Public, HideBySig
    AddLoop(IList`1, UInt32, Double): PrivateScope, Public, HideBySig
    AddLoop(IList`1, UInt32): PrivateScope, Public, HideBySig
    AddLoop(IList`1): PrivateScope, Public, HideBySig
    AddVertex(CAD_ELEM_TYPE, UInt32, CVector2D): PrivateScope, Public, HideBySig
    RemoveElement(CAD_ELEM_TYPE, UInt32): PrivateScope, Public, HideBySig
    ConnectVertex(CEdge2D): PrivateScope, Public, HideBySig
    ConnectVertex_Line(UInt32, UInt32): PrivateScope, Public, HideBySig
    SetCurve_Bezier(UInt32, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    SetCurve_Polyline(UInt32, IList`1): PrivateScope, Public, HideBySig
    SetCurve_Polyline(UInt32 IsConst): PrivateScope, Public, HideBySig
    SetCurve_Arc(UInt32 IsConst, Boolean(HasFieldMarshal), Double): PrivateScope, Public, HideBySig
    SetCurve_Arc(UInt32 IsConst, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetCurve_Arc(UInt32 IsConst): PrivateScope, Public, HideBySig
    SetCurve_Line(UInt32 IsConst): PrivateScope, Public, HideBySig
    WriteToFile_dxf(String, Double): PrivateScope, Public, HideBySig
    Serialize(CSerializer): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CCadObj2D+CResAddVertex: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(CResAddVertex*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CResAddVertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    UInt32 id_e_add 'get set' : 
    UInt32 id_v_add 'get set' : 
    CResAddVertex* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id_v_add(): PrivateScope, Public, HideBySig, SpecialName
    set_id_v_add(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_e_add(): PrivateScope, Public, HideBySig, SpecialName
    set_id_e_add(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CCadObj2D+CResAddPolygon: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(CResAddPolygon*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CResAddPolygon): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.Generic.IList`1[System.UInt32] aIdE 'get set' : 
    System.Collections.Generic.IList`1[System.UInt32] aIdV 'get set' : 
    UInt32 id_l_add 'get set' : 
    CResAddPolygon* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id_l_add(): PrivateScope, Public, HideBySig, SpecialName
    set_id_l_add(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_aIdV(): PrivateScope, Public, HideBySig, SpecialName
    set_aIdV(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_aIdE(): PrivateScope, Public, HideBySig, SpecialName
    set_aIdE(IList`1): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CCadObj2D_Move: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCad.CCadObj2D
    Void .ctor(Cad.CCadObj2D_Move*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CCadObj2D_Move): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Cad.CCadObj2D_Move* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    MoveVertex(IList`1): PrivateScope, Public, HideBySig
    MoveVertex(UInt32, CVector2D): PrivateScope, Public, HideBySig
    MoveEdge(UInt32, CVector2D): PrivateScope, Public, HideBySig
    MoveLoop(UInt32, CVector2D): PrivateScope, Public, HideBySig
    DragArc(UInt32, CVector2D): PrivateScope, Public, HideBySig
    DragPolyline(UInt32, CVector2D): PrivateScope, Public, HideBySig
    PreCompDragPolyline(UInt32, CVector2D): PrivateScope, Public, HideBySig
    SmoothingPolylineEdge(UInt32, UInt32, CVector2D, Double): PrivateScope, Public, HideBySig
Class DelFEM4NetCad.CCadObj3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Cad.CCadObj3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CCadObj3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Cad.CCadObj3D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    IsElemID(CAD_ELEM_TYPE, UInt32): PrivateScope, Public, HideBySig
    GetAryElemID(CAD_ELEM_TYPE): PrivateScope, Public, HideBySig
    AddCuboid(Double, Double, Double): PrivateScope, Public, HideBySig
    AddPolygon(IList`1, UInt32): PrivateScope, Public, HideBySig
    AddRectLoop(UInt32, CVector2D, CVector2D): PrivateScope, Public, HideBySig
    LiftLoop(UInt32, CVector3D): PrivateScope, Public, HideBySig
    AddPoint(CAD_ELEM_TYPE, UInt32, CVector3D): PrivateScope, Public, HideBySig
    ConnectVertex(UInt32, UInt32): PrivateScope, Public, HideBySig
    GetVertexCoord(UInt32): PrivateScope, Public, HideBySig
    GetIdVertex_Edge(UInt32&(Out), UInt32&(Out), UInt32): PrivateScope, Public, HideBySig
    GetIdLoop_Edge(UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetItrLoop(UInt32): PrivateScope, Public, HideBySig
    GetLoop(UInt32): PrivateScope, Public, HideBySig
    AssertValid(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CCadObj3D+CItrVertex: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(DelFEM4NetCad.CCadObj3D, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CItrVertex*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CItrVertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    CItrVertex* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    op_Increment(Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Increment(): PrivateScope, Public, HideBySig, SpecialName
    GetIdEdge_Ahead(UInt32&(Out), Boolean&(Out)): PrivateScope, Public, HideBySig
    GetIdEdge_Behind(UInt32&(Out), Boolean&(Out)): PrivateScope, Public, HideBySig
    GetIdLoop(): PrivateScope, Public, HideBySig
    IsEnd(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.CCadSVG: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadSVG_AddLoopCad(String, CCadObj2D&(Out), Double): PrivateScope, Public, Static, HideBySig
    ReadSVG_AddLoopCad(String, CCadObj2D&(Out)): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetCom.View.CDrawer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Draw(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetAntiAliasing(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSutableRotMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.View.CEmptyDrawer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.View.CDrawer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    Draw(): PrivateScope, Public, Virtual, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
    SetAntiAliasing(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig
    GetSutableRotMode(): PrivateScope, Public, Virtual, HideBySig
Class DelFEM4NetCom.View.CDrawerArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Com.View.CDrawerArray*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.View.CDrawerArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.Generic.IList`1[DelFEM4NetCom.View.CDrawer] m_drawer_ary 'get ' : 
    Com.View.CDrawerArray* Self 'get ' : 
  Methods:
    PushBack(CDrawer): PrivateScope, Public, HideBySig
    Draw(): PrivateScope, Public, HideBySig
    DrawSelection(): PrivateScope, Public, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, HideBySig
    ClearSelected(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, HideBySig
    InitTrans(CCamera): PrivateScope, Public, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_m_drawer_ary(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.View.CVertexArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.View.CVertexArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DelFEM4NetCom.DoubleArrayIndexer pUVArray 'get ' : 
    DelFEM4NetCom.DoubleArrayIndexer pVertexArray 'get ' : 
    UInt32 NPoin 'get ' : 
    UInt32 NDim 'get ' : 
    Com.View.CVertexArray* Self 'get ' : 
  Methods:
    CreateNativeInstance(CVertexArray* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    SetSize(UInt32, UInt32): PrivateScope, Public, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, HideBySig
    EnableUVMap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_NDim(): PrivateScope, Public, HideBySig, SpecialName
    get_NPoin(): PrivateScope, Public, HideBySig, SpecialName
    get_pVertexArray(): PrivateScope, Public, HideBySig, SpecialName
    get_pUVArray(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCad.View.CDrawer_Cad2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.View.CDrawer
    Void .ctor(Cad.View.CDrawer_Cad2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CCadObj2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.View.CDrawer_Cad2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Cad.View.CDrawer_Cad2D* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    UpdateCAD_Geometry(CCadObj2D): PrivateScope, Public, HideBySig
    UpdateCAD_TopologyGeometry(CCadObj2D): PrivateScope, Public, HideBySig
    Draw(): PrivateScope, Public, Virtual, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    SetLineWidth(UInt32): PrivateScope, Public, HideBySig
    SetPointSize(UInt32): PrivateScope, Public, HideBySig
    SetTextureScale(Double): PrivateScope, Public, HideBySig
    SetTexCenter(Double, Double): PrivateScope, Public, HideBySig
    GetTexCenter(Double&, Double&): PrivateScope, Public, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    AddSelected(CAD_ELEM_TYPE, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
    GetCadPartID(Int32[], CAD_ELEM_TYPE&, UInt32&): PrivateScope, Public, HideBySig
    HideEffected(CCadObj2D, CAD_ELEM_TYPE, UInt32): PrivateScope, Public, HideBySig
    ShowEffected(CCadObj2D, CAD_ELEM_TYPE, UInt32): PrivateScope, Public, HideBySig
    SetIsShow(Boolean(HasFieldMarshal), CAD_ELEM_TYPE, IList`1): PrivateScope, Public, HideBySig
    SetIsShow(Boolean(HasFieldMarshal), CAD_ELEM_TYPE, UInt32): PrivateScope, Public, HideBySig
    SetRigidDisp(UInt32, Double, Double): PrivateScope, Public, HideBySig
    EnableUVMap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
Class DelFEM4NetCad.View.CDrawerRubberBand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.View.CDrawer
    Void .ctor(Cad.View.CDrawerRubberBand*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CCadObj2D, UInt32, DelFEM4NetCom.CVector3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CCadObj2D, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.CVector3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.View.CDrawerRubberBand): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Cad.View.CDrawerRubberBand* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Draw(): PrivateScope, Public, Virtual, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
    WhatKindOfYou(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMousePosition(CVector3D): PrivateScope, Public, HideBySig
Class DelFEM4NetCad.View.CDrawer_Cad3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.View.CDrawer
    Void .ctor(Cad.View.CDrawer_Cad3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.CCadObj3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.View.CDrawer_Cad3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Cad.View.CDrawer_Cad3D* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    UpdateCAD_TopologyGeometry(CCadObj3D): PrivateScope, Public, HideBySig
    Draw(): PrivateScope, Public, Virtual, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
    SetLineWidth(UInt32): PrivateScope, Public, HideBySig
    SetPointSize(UInt32): PrivateScope, Public, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
Interface DelFEM4NetMsh.IMesh: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    Msh.IMesh* MshSelf 'get ' : 
  Methods:
    get_MshSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetDimention(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInfo(UInt32, UInt32&(Out), UInt32&(Out), UInt32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCoord(IList`1&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetConnectivity(UInt32, IList`1&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAry_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIncludeElemIDAry(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DelFEM4NetMsh.CMeshProjector2Dto3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetMsh.IMesh): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Msh.CMeshProjector2Dto3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CMeshProjector2Dto3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetMsh.IMesh
    System.IDisposable
  Properties:
    Msh.CMeshProjector2Dto3D* Self 'get ' : 
    Msh.IMesh* MshSelf 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_MshSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetDimention(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetInfo(UInt32, UInt32&(Out), UInt32&(Out), UInt32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCoord(IList`1&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetConnectivity(UInt32, IList`1&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAry_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIncludeElemIDAry(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.SBar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.SBar*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.SBar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 C_V_CNT : Public, Static
    Int32 C_S_CNT : Public, Static
  Properties:
    UInt32[] r2 'get set' : 
    UInt32[] s2 'get set' : 
    UInt32[] v 'get set' : 
    Msh.SBar* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_v(): PrivateScope, Public, HideBySig, SpecialName
    set_v(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_s2(): PrivateScope, Public, HideBySig, SpecialName
    set_s2(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_r2(): PrivateScope, Public, HideBySig, SpecialName
    set_r2(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.SQuad2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.SQuad2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.SQuad2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 C_V_CNT : Public, Static
    Int32 C_S_CNT : Public, Static
  Properties:
    UInt32[] r2 'get set' : 
    UInt32[] s2 'get set' : 
    Int32[] g2 'get set' : 
    UInt32[] v 'get set' : 
    Msh.SQuad2D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_v(): PrivateScope, Public, HideBySig, SpecialName
    set_v(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_g2(): PrivateScope, Public, HideBySig, SpecialName
    set_g2(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_s2(): PrivateScope, Public, HideBySig, SpecialName
    set_s2(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_r2(): PrivateScope, Public, HideBySig, SpecialName
    set_r2(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.STri2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.STri2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.STri2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 C_V_CNT : Public, Static
    Int32 C_S_CNT : Public, Static
  Properties:
    UInt32[] r2 'get set' : 
    UInt32[] s2 'get set' : 
    Int32[] g2 'get set' : 
    UInt32[] v 'get set' : 
    Msh.STri2D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_v(): PrivateScope, Public, HideBySig, SpecialName
    set_v(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_g2(): PrivateScope, Public, HideBySig, SpecialName
    set_g2(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_s2(): PrivateScope, Public, HideBySig, SpecialName
    set_s2(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_r2(): PrivateScope, Public, HideBySig, SpecialName
    set_r2(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.CPoint2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.CPoint2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Int32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CPoint2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    UInt32 d   'get set' : 
    Int32 e    'get set' : 
    DelFEM4NetCom.CVector2D p 'get set' : 
    Msh.CPoint2D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_p(): PrivateScope, Public, HideBySig, SpecialName
    set_p(CVector2D): PrivateScope, Public, HideBySig, SpecialName
    get_e(): PrivateScope, Public, HideBySig, SpecialName
    set_e(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_d(): PrivateScope, Public, HideBySig, SpecialName
    set_d(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.SVertex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.SVertex*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.SVertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    UInt32 v   'get set' : 
    Int32 ilayer 'get set' : 
    UInt32 id_v_cad 'get set' : 
    UInt32 id  'get set' : 
    Msh.SVertex* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_v_cad(): PrivateScope, Public, HideBySig, SpecialName
    set_id_v_cad(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ilayer(): PrivateScope, Public, HideBySig, SpecialName
    set_ilayer(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_v(): PrivateScope, Public, HideBySig, SpecialName
    set_v(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.CBarAry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.CBarAry*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CBarAry): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 C_V_CNT : Public, Static
  Properties:
    System.Collections.Generic.IList`1[DelFEM4NetMsh.SBar] m_aBar 'get set' : 
    Int32 ilayer 'get set' : 
    UInt32[] id_lr 'get set' : 
    UInt32[] id_se 'get set' : 
    UInt32 id_e_cad 'get set' : 
    UInt32 id  'get set' : 
    Msh.CBarAry* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_e_cad(): PrivateScope, Public, HideBySig, SpecialName
    set_id_e_cad(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_se(): PrivateScope, Public, HideBySig, SpecialName
    set_id_se(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_id_lr(): PrivateScope, Public, HideBySig, SpecialName
    set_id_lr(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_ilayer(): PrivateScope, Public, HideBySig, SpecialName
    set_ilayer(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_m_aBar(): PrivateScope, Public, HideBySig, SpecialName
    set_m_aBar(IList`1): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.CTriAry2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.CTriAry2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CTriAry2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.Generic.IList`1[DelFEM4NetMsh.STri2D] m_aTri 'get set' : 
    Int32 ilayer 'get set' : 
    UInt32 id_l_cad 'get set' : 
    UInt32 id  'get set' : 
    Msh.CTriAry2D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_l_cad(): PrivateScope, Public, HideBySig, SpecialName
    set_id_l_cad(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ilayer(): PrivateScope, Public, HideBySig, SpecialName
    set_ilayer(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_m_aTri(): PrivateScope, Public, HideBySig, SpecialName
    set_m_aTri(IList`1): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.CQuadAry2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.CQuadAry2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CQuadAry2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.Generic.IList`1[DelFEM4NetMsh.SQuad2D] m_aQuad 'get set' : 
    Int32 ilayer 'get set' : 
    UInt32 id_l_cad 'get set' : 
    UInt32 id  'get set' : 
    Msh.CQuadAry2D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_l_cad(): PrivateScope, Public, HideBySig, SpecialName
    set_id_l_cad(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ilayer(): PrivateScope, Public, HideBySig, SpecialName
    set_ilayer(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_m_aQuad(): PrivateScope, Public, HideBySig, SpecialName
    set_m_aQuad(IList`1): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.CMesher2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCad.ICad2D_Msh, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCad.ICad2D_Msh): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Msh.CMesher2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CMesher2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetMsh.IMesh
    System.IDisposable
  Properties:
    Msh.CMesher2D* Self 'get ' : 
    Msh.IMesh* MshSelf 'get ' : 
  Methods:
    get_MshSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddIdLCad_CutMesh(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsIdLCad_CutMesh(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveIdLCad_CutMesh(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdLCad_CutMesh(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMeshingMode_ElemLength(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMeshingMode_ElemSize(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Meshing(ICad2D_Msh): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDimention(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetInfo(UInt32, UInt32&(Out), UInt32&(Out), UInt32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCoord(IList`1&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetConnectivity(UInt32, IList`1&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAry_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIncludeElemIDAry(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetClipedMesh(IList`1&(Out), IList`1&(Out), IList`1, IList`1): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SmoothingMesh_Laplace(UInt32): PrivateScope, Public, HideBySig
    SmoothingMesh_Delaunay(UInt32&): PrivateScope, Public, HideBySig
    GetElemID_FromCadID(UInt32, CAD_ELEM_TYPE): PrivateScope, Public, HideBySig
    IsID(UInt32): PrivateScope, Public, HideBySig
    GetMshInfo(UInt32, UInt32&(Out), MSH_TYPE&(Out), UInt32&(Out), UInt32&(Out)): PrivateScope, Public, HideBySig
    GetTriArySet(): PrivateScope, Public, HideBySig
    GetQuadArySet(): PrivateScope, Public, HideBySig
    GetBarArySet(): PrivateScope, Public, HideBySig
    GetVertexAry(): PrivateScope, Public, HideBySig
    GetVectorAry(): PrivateScope, Public, HideBySig
    Serialize(CSerializer, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Serialize(CSerializer): PrivateScope, Public, HideBySig
    ReadFromFile_GiDMsh(String): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct DelFEM4NetMsh.MSH_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DelFEM4NetMsh.MSH_TYPE VERTEX = 0 : Public, Static, Literal, HasDefault
    DelFEM4NetMsh.MSH_TYPE BAR = 1 : Public, Static, Literal, HasDefault
    DelFEM4NetMsh.MSH_TYPE TRI = 2 : Public, Static, Literal, HasDefault
    DelFEM4NetMsh.MSH_TYPE QUAD = 3 : Public, Static, Literal, HasDefault
    DelFEM4NetMsh.MSH_TYPE TET = 4 : Public, Static, Literal, HasDefault
    DelFEM4NetMsh.MSH_TYPE HEX = 5 : Public, Static, Literal, HasDefault
Class DelFEM4NetCom.View.CCamera: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Com.View.CCamera*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.View.ROTATION_MODE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.View.CCamera): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Com.View.CCamera* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetObjectCenter(): PrivateScope, Public, HideBySig
    GetObjectCenter(Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    SetObjectCenter(Double, Double, Double): PrivateScope, Public, HideBySig
    SetObjectSize(Double, Double, Double): PrivateScope, Public, HideBySig
    SetObjectBoundingBox(CBoundingBox3D): PrivateScope, Public, HideBySig
    Fit(CBoundingBox3D): PrivateScope, Public, HideBySig
    Fit(): PrivateScope, Public, HideBySig
    GetScale(): PrivateScope, Public, HideBySig
    SetScale(Double): PrivateScope, Public, HideBySig
    IsPers(): PrivateScope, Public, HideBySig
    SetIsPers(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetFovY(): PrivateScope, Public, HideBySig
    SetFovY(Double): PrivateScope, Public, HideBySig
    GetPerspective(Double&(Out), Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    GetOrtho(Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    GetHalfViewHeight(): PrivateScope, Public, HideBySig
    GetCenterPosition(): PrivateScope, Public, HideBySig
    GetCenterPosition(Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    MousePan(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    SetWindowAspect(Double): PrivateScope, Public, HideBySig
    GetWindowAspect(): PrivateScope, Public, HideBySig
    RotMatrix33(): PrivateScope, Public, HideBySig
    RotMatrix33(Double[]&(Out)): PrivateScope, Public, HideBySig
    RotMatrix44Trans(Double[]&(Out)): PrivateScope, Public, HideBySig
    SetRotationMode(ROTATION_MODE): PrivateScope, Public, HideBySig
    GetRotationMode(): PrivateScope, Public, HideBySig
    MouseRotation(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    ProjectionOnPlane(Double, Double, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    ProjectionOnPlane(Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    ProjectionOnPlane(Double, Double): PrivateScope, Public, HideBySig
    SetRotation2DH(Double, Double): PrivateScope, Public, HideBySig
    SetWindowCenter(Double, Double): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct DelFEM4NetCom.View.ROTATION_MODE: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DelFEM4NetCom.View.ROTATION_MODE ROT_2D = 0 : Public, Static, Literal, HasDefault
    DelFEM4NetCom.View.ROTATION_MODE ROT_2DH = 1 : Public, Static, Literal, HasDefault
    DelFEM4NetCom.View.ROTATION_MODE ROT_3D = 2 : Public, Static, Literal, HasDefault
Class DelFEM4NetCom.Complex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Com.Complex*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.Complex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Double Imag 'get ' : 
    Double Real 'get ' : 
    Com.Complex* Self 'get ' : 
  Methods:
    op_Implicit(Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Complex, Complex): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Complex): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Complex, Complex): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Complex, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, Complex): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Complex, Complex): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Complex, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Double, Complex): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Complex, Complex): PrivateScope, Public, Static, HideBySig, SpecialName
    Conjugate(Complex): PrivateScope, Public, Static, HideBySig
    SquaredNorm(Complex): PrivateScope, Public, Static, HideBySig
    Norm(Complex): PrivateScope, Public, Static, HideBySig
    SetZero(Complex): PrivateScope, Public, Static, HideBySig
    InnerProduct(Complex, Complex): PrivateScope, Public, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(Double): PrivateScope, Public, HideBySig, SpecialName
    op_MultiplicationAssignment(Complex): PrivateScope, Public, HideBySig, SpecialName
    op_MultiplicationAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    op_AdditionAssignment(Complex): PrivateScope, Public, HideBySig, SpecialName
    op_SubtractionAssignment(Complex): PrivateScope, Public, HideBySig, SpecialName
    get_Real(): PrivateScope, Public, HideBySig, SpecialName
    get_Imag(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.NativeInstanceArrayIndexer<Com::Complex\,DelFEM4NetCom::Complex\,DelFEM4NetCom::Complex ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.NativeInstanceArrayIndexer<Com::Complex\,DelFEM4NetCom::Complex\,DelFEM4NetCom::Complex ^>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Com.Complex*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[DelFEM4NetCom.Complex]
    System.Collections.Generic.ICollection`1[DelFEM4NetCom.Complex]
    System.Collections.Generic.IEnumerable`1[DelFEM4NetCom.Complex]
    System.Collections.IEnumerable
    System.IDisposable
  Properties:
    System.Object SyncRoot 'get ' : 
    Boolean IsSyncronized 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 Count 'get ' : 
    DelFEM4NetCom.Complex Item [Int32] 'get set' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Complex): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSyncronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(Complex): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Complex): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Complex): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, Complex): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Complex): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Complex[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.ComplexArrayIndexer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.NativeInstanceArrayIndexer<Com::Complex\,DelFEM4NetCom::Complex\,DelFEM4NetCom::Complex ^>
    Void .ctor(DelFEM4NetCom.ComplexArrayIndexer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Com.Complex*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetCom.NativeInstanceArrayIndexer<Com::Complex\,DelFEM4NetCom::Complex\,DelFEM4NetCom::Complex ^>+NativeInstanceArrayIndexerEnumerator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(DelFEM4NetCom.NativeInstanceArrayIndexer<Com::Complex\,DelFEM4NetCom::Complex\,DelFEM4NetCom::Complex ^>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[DelFEM4NetCom.Complex]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Object CurrentNoGeneric 'get ' : 
    DelFEM4NetCom.Complex Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentNoGeneric(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.View.SSelectedObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Com.View.SSelectedObject*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.View.SSelectedObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DelFEM4NetCom.CVector3D picked_pos 'get set' : 
    Int32[] name 'get set' : 
    UInt32 name_depth 'get set' : 
    Com.View.SSelectedObject* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_name_depth(): PrivateScope, Public, HideBySig, SpecialName
    set_name_depth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_name(): PrivateScope, Public, HideBySig, SpecialName
    set_name(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_picked_pos(): PrivateScope, Public, HideBySig, SpecialName
    set_picked_pos(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.View.DrawerGlUtility: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetProjectionTransform(CCamera): PrivateScope, Public, Static, HideBySig
    SetModelViewTransform(CCamera): PrivateScope, Public, Static, HideBySig
    PickPre(UInt32, PickSelectBuffer&(Out), UInt32, UInt32, UInt32, UInt32, CCamera): PrivateScope, Public, Static, HideBySig
    PickPost(PickSelectBuffer, UInt32, UInt32, CCamera): PrivateScope, Public, Static, HideBySig
    ReadPPM_SetTexture(String, UInt32&(Out), UInt32&(Out), UInt32&(Out)): PrivateScope, Public, Static, HideBySig
    WritePPM_ScreenImage(String): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetCom.View.DrawerGlUtility+PickSelectBuffer: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    UInt32* Buffer 'get ' : 
    UInt32 Size 'get ' : 
  Methods:
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Buffer(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.View.CDrawerCoord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.View.CDrawer
    Void .ctor(Com.View.CDrawerCoord*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.View.CCamera, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.View.CDrawerCoord): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Com.View.CDrawerCoord* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Draw(): PrivateScope, Public, Virtual, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
    SetTrans(CCamera, Int32): PrivateScope, Public, HideBySig
    SetTrans(CCamera): PrivateScope, Public, HideBySig
    SetIsShown(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetIsShown(): PrivateScope, Public, HideBySig
Class DelFEM4NetCom.View.CDrawerRect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.View.CDrawer
    Void .ctor(Com.View.CDrawerRect*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.View.CDrawerRect): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Com.View.CDrawerRect* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Draw(): PrivateScope, Public, Virtual, HideBySig
    SetInitialPositionMode(Double, Double, UInt32): PrivateScope, Public, HideBySig
    SetPosition(Double, Double): PrivateScope, Public, HideBySig
    GetCenterSize(Double&(Out), Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    GetPosition(Double&(Out), Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
Class DelFEM4NetCom.View.CDrawerImageTexture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.View.CDrawer
    Void .ctor(Com.View.CDrawerImageTexture*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.View.CDrawerImageTexture): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Com.View.CDrawerImageTexture* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    IsTexture(): PrivateScope, Public, HideBySig
    ReadPPM(String): PrivateScope, Public, HideBySig
    DeleteTexture(): PrivateScope, Public, HideBySig
    SetImage(UInt32, UInt32, IList`1): PrivateScope, Public, HideBySig
    Draw(): PrivateScope, Public, Virtual, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
Class DelFEM4NetFem.Eqn.CEqnSystem: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Eqn.CEqnSystem* EqnSysSelf 'get ' : 
  Methods:
    get_EqnSysSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Solve(CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAry_ItrNormRes(): PrivateScope, Public, HideBySig
    AddFixField(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddFixField(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddFixElemAry(IList`1, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddFixElemAry(IList`1, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddFixElemAry(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddFixElemAry(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearFixElemAry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ClearFixElemAry(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetTimeIntegrationParameter(Double, Double, Double): PrivateScope, Public, HideBySig
    SetTimeIntegrationParameter(Double, Double): PrivateScope, Public, HideBySig
    SetTimeIntegrationParameter(Double): PrivateScope, Public, HideBySig
    ClearValueLinearSystemPreconditioner(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearValueLinearSystem(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearValuePreconditioner(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearLinearSystemPreconditioner(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearPreconditioner(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearLinearSystem(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetCom.CIndexedArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Com.CIndexedArray*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetCom.CIndexedArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DelFEM4NetCom.UIntVectorIndexer array 'get ' : 
    DelFEM4NetCom.UIntVectorIndexer index 'get ' : 
    Com.CIndexedArray* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    InitializeSize(UInt32): PrivateScope, Public, HideBySig
    Size(): PrivateScope, Public, HideBySig
    SetTranspose(UInt32, CIndexedArray): PrivateScope, Public, HideBySig
    Fill(UInt32, UInt32): PrivateScope, Public, HideBySig
    Sort(): PrivateScope, Public, HideBySig
    CheckValid(): PrivateScope, Public, HideBySig
    get_index(): PrivateScope, Public, HideBySig, SpecialName
    get_array(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CElemAry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Fem.Field.CElemAry*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, DelFEM4NetFem.Field.ELEM_TYPE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Field.CElemAry): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Field.CElemAry* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    IsSegID(UInt32): PrivateScope, Public, HideBySig
    GetAry_SegID(): PrivateScope, Public, HideBySig
    GetFreeSegID(): PrivateScope, Public, HideBySig
    GetSeg(UInt32): PrivateScope, Public, HideBySig
    ElemType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakePattern_FEM(Int32, CIndexedArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakePattern_FEM(UInt32, UInt32, CIndexedArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakeEdge(UInt32, UInt32&(Out), IList`1&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakeElemToEdge(UInt32, UInt32, IList`1, IList`1&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakeBoundElemAry(UInt32, UInt32&(Out), IList`1(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitializeFromFile(String, Int32&): PrivateScope, Public, HideBySig
    WriteToFile(String, Int32&, UInt32): PrivateScope, Public, HideBySig
    AddSegment(UInt32, CElemSeg, IList`1): PrivateScope, Public, HideBySig
    AddSegment(IList`1, IList`1): PrivateScope, Public, HideBySig
    MakeElemSurElem(Int32, Int32[]): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CElemAry+CElemSeg: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(UInt32, DelFEM4NetFem.Field.ELSEG_TYPE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CElemSeg*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CElemSeg): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    CElemSeg* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetMaxNoes(): PrivateScope, Public, HideBySig
    Length(): PrivateScope, Public, HideBySig
    Size(): PrivateScope, Public, HideBySig
    GetIdNA(): PrivateScope, Public, HideBySig
    GetElSegType(): PrivateScope, Public, HideBySig
    GetNodes(UInt32, UInt32[]): PrivateScope, Public, HideBySig
    SetNodes(UInt32, UInt32, Int32): PrivateScope, Public, HideBySig
    GetLength(ELSEG_TYPE, ELEM_TYPE): PrivateScope, Public, Static, HideBySig
    GetElemDim(ELEM_TYPE): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CElemAryPtr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Field.CElemAry
    Void .ctor(Fem.Field.CElemAry*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetFem.Field.CNodeAry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Fem.Field.CNodeAry*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Field.CNodeAry): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Field.CNodeAry* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    ClearSegment(): PrivateScope, Public, HideBySig
    Size(): PrivateScope, Public, HideBySig
    GetFreeSegID(UInt32): PrivateScope, Public, HideBySig
    GetFreeSegID(): PrivateScope, Public, HideBySig
    IsSegID(UInt32): PrivateScope, Public, HideBySig
    GetAry_SegID(): PrivateScope, Public, HideBySig
    GetSeg(UInt32): PrivateScope, Public, HideBySig
    GetValueFromNodeSegment(UInt32, CVector_Blk(Out), UInt32): PrivateScope, Public, HideBySig
    GetValueFromNodeSegment(UInt32, CVector_Blk): PrivateScope, Public, HideBySig
    AddValueFromNodeSegment(Double, UInt32, CVector_Blk, UInt32): PrivateScope, Public, HideBySig
    AddValueFromNodeSegment(Double, UInt32, CVector_Blk): PrivateScope, Public, HideBySig
    AddEaEs(Pair`2): PrivateScope, Public, HideBySig
    GetAryEaEs(): PrivateScope, Public, HideBySig
    SetIncludeEaEs_InEaEs(Pair`2, Pair`2): PrivateScope, Public, HideBySig
    IsIncludeEaEs_InEaEs(Pair`2, Pair`2): PrivateScope, Public, HideBySig
    GetAry_EaEs_Min(): PrivateScope, Public, HideBySig
    IsContainEa_InEaEs(Pair`2, UInt32): PrivateScope, Public, HideBySig
    AddSegment(IList`1, IList`1): PrivateScope, Public, HideBySig
    AddSegment(IList`1, Double): PrivateScope, Public, HideBySig
    AddSegment(IList`1): PrivateScope, Public, HideBySig
    SetValueToNodeSegment(CElemAry, UInt32, UInt32, UInt32, Double): PrivateScope, Public, HideBySig
    SetValueToNodeSegment(UInt32, CVector_Blk, UInt32): PrivateScope, Public, HideBySig
    SetValueToNodeSegment(UInt32, CVector_Blk): PrivateScope, Public, HideBySig
    AddValueToNodeSegment(UInt32, UInt32, Double): PrivateScope, Public, HideBySig
    AddValueToNodeSegment(UInt32, CZVector_Blk, Double): PrivateScope, Public, HideBySig
    AddValueToNodeSegment(UInt32, CVector_Blk, Double, UInt32): PrivateScope, Public, HideBySig
    AddValueToNodeSegment(UInt32, CVector_Blk, Double): PrivateScope, Public, HideBySig
    InitializeFromFile(String, Int32&): PrivateScope, Public, HideBySig
    WriteToFile(String, Int32&, UInt32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CNodeAry+CNodeSeg: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(UInt32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CNodeSeg*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CNodeSeg): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    CNodeSeg* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Length(): PrivateScope, Public, HideBySig
    Size(): PrivateScope, Public, HideBySig
    GetValue(UInt32, Complex[]&(Out)): PrivateScope, Public, HideBySig
    GetValue(UInt32, Double[]&(Out)): PrivateScope, Public, HideBySig
    SetValue(UInt32, UInt32, Double): PrivateScope, Public, HideBySig
    AddValue(UInt32, UInt32, Double): PrivateScope, Public, HideBySig
    SetZero(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CNodeAryPtr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Field.CNodeAry
    Void .ctor(Fem.Field.CNodeAry*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetFem.Field.CField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt32, System.Collections.Generic.IList`1[DelFEM4NetFem.Field.CField+CElemInterpolation], CNodeSegInNodeAry, CNodeSegInNodeAry, DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Fem.Field.CField*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Field.CField): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Field.CField* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    IsValid(): PrivateScope, Public, HideBySig
    AssertValid(CFieldWorld): PrivateScope, Public, HideBySig
    GetNDimCoord(): PrivateScope, Public, HideBySig
    GetNLenValue(): PrivateScope, Public, HideBySig
    GetFieldType(): PrivateScope, Public, HideBySig
    GetFieldDerivativeType(): PrivateScope, Public, HideBySig
    IsPartial(): PrivateScope, Public, HideBySig
    GetIDFieldParent(): PrivateScope, Public, HideBySig
    GetAryIdEA(): PrivateScope, Public, HideBySig
    GetInterpolationType(UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    GetElemSeg(UInt32, ELSEG_TYPE, Boolean(HasFieldMarshal), CFieldWorld): PrivateScope, Public, HideBySig
    GetIdElemSeg(UInt32, ELSEG_TYPE, Boolean(HasFieldMarshal), CFieldWorld): PrivateScope, Public, HideBySig
    GetNodeSeg(ELSEG_TYPE, Boolean(HasFieldMarshal), CFieldWorld, FIELD_DERIVATION_TYPE): PrivateScope, Public, HideBySig
    GetNodeSeg(ELSEG_TYPE, Boolean(HasFieldMarshal), CFieldWorld): PrivateScope, Public, HideBySig
    IsNodeSeg(ELSEG_TYPE, Boolean(HasFieldMarshal), CFieldWorld, FIELD_DERIVATION_TYPE): PrivateScope, Public, HideBySig
    IsNodeSeg(ELSEG_TYPE, Boolean(HasFieldMarshal), CFieldWorld): PrivateScope, Public, HideBySig
    GetNodeSegInNodeAry(ELSEG_TYPE): PrivateScope, Public, HideBySig
    GetMinMaxValue(Double&(Out), Double&(Out), CFieldWorld, UInt32, FIELD_DERIVATION_TYPE): PrivateScope, Public, HideBySig
    GetMinMaxValue(Double&(Out), Double&(Out), CFieldWorld, UInt32): PrivateScope, Public, HideBySig
    GetMinMaxValue(Double&(Out), Double&(Out), CFieldWorld): PrivateScope, Public, HideBySig
    SetValueType(FIELD_TYPE, FIELD_DERIVATION_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    GetLayer(UInt32): PrivateScope, Public, HideBySig
    FindVelocityAtPoint(Double[], UInt32&(Out), UInt32&(Out), Double&(Out), Double&(Out), Double[], CFieldWorld): PrivateScope, Public, HideBySig
    GetMapVal2Co(UInt32): PrivateScope, Public, HideBySig
    ExportFile_Inp(String, CFieldWorld): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CField+CElemInterpolation: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CElemInterpolation*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CElemInterpolation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 ilayer 'get set' : 
    UInt32 id_es_b_co 'get set' : 
    UInt32 id_es_b_va 'get set' : 
    UInt32 id_es_e_co 'get set' : 
    UInt32 id_es_e_va 'get set' : 
    UInt32 id_es_c_co 'get set' : 
    UInt32 id_es_c_va 'get set' : 
    UInt32 id_ea 'get set' : 
    CElemInterpolation* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id_ea(): PrivateScope, Public, HideBySig, SpecialName
    set_id_ea(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_es_c_va(): PrivateScope, Public, HideBySig, SpecialName
    set_id_es_c_va(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_es_c_co(): PrivateScope, Public, HideBySig, SpecialName
    set_id_es_c_co(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_es_e_va(): PrivateScope, Public, HideBySig, SpecialName
    set_id_es_e_va(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_es_e_co(): PrivateScope, Public, HideBySig, SpecialName
    set_id_es_e_co(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_es_b_va(): PrivateScope, Public, HideBySig, SpecialName
    set_id_es_b_va(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_es_b_co(): PrivateScope, Public, HideBySig, SpecialName
    set_id_es_b_co(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ilayer(): PrivateScope, Public, HideBySig, SpecialName
    set_ilayer(Int32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CField+CNodeSegInNodeAry: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(UInt32, Boolean, UInt32, UInt32, Boolean, UInt32, UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CNodeSegInNodeAry*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CNodeSegInNodeAry): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    UInt32 id_ns_ac 'get set' : 
    UInt32 id_ns_ve 'get set' : 
    UInt32 id_ns_va 'get set' : 
    Boolean is_part_va 'get set' : 
    UInt32 id_na_va 'get set' : 
    UInt32 id_ns_co 'get set' : 
    Boolean is_part_co 'get set' : 
    UInt32 id_na_co 'get set' : 
    CNodeSegInNodeAry* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id_na_co(): PrivateScope, Public, HideBySig, SpecialName
    set_id_na_co(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_is_part_co(): PrivateScope, Public, HideBySig, SpecialName
    set_is_part_co(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_id_ns_co(): PrivateScope, Public, HideBySig, SpecialName
    set_id_ns_co(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_na_va(): PrivateScope, Public, HideBySig, SpecialName
    set_id_na_va(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_is_part_va(): PrivateScope, Public, HideBySig, SpecialName
    set_is_part_va(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_id_ns_va(): PrivateScope, Public, HideBySig, SpecialName
    set_id_ns_va(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_ns_ve(): PrivateScope, Public, HideBySig, SpecialName
    set_id_ns_ve(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_ns_ac(): PrivateScope, Public, HideBySig, SpecialName
    set_id_ns_ac(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CFieldPtr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Field.CField
    Void .ctor(Fem.Field.CField*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetFem.Field.CIDConvEAMshCad: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Fem.Field.CIDConvEAMshCad*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Field.CIDConvEAMshCad): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Field.CIDConvEAMshCad* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    IsIdEA(UInt32): PrivateScope, Public, HideBySig
    GetIdEA_fromMsh(UInt32): PrivateScope, Public, HideBySig
    GetIdEA_fromMshExtrude(UInt32, UInt32): PrivateScope, Public, HideBySig
    GetIdEA_fromCad(UInt32, CAD_ELEM_TYPE, UInt32): PrivateScope, Public, HideBySig
    GetIdEA_fromCad(UInt32, CAD_ELEM_TYPE): PrivateScope, Public, HideBySig
    GetIdCad_fromIdEA(UInt32, UInt32&(Out), CAD_ELEM_TYPE&(Out)): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CFieldWorld: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Fem.Field.CFieldWorld*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Field.CFieldWorld* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    AddMesh(IMesh): PrivateScope, Public, HideBySig
    SetCustomBaseField(UInt32, IList`1, IList`1, IList`1): PrivateScope, Public, HideBySig
    GetIDConverter(UInt32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    IsIdEA(UInt32): PrivateScope, Public, HideBySig
    GetAry_IdEA(): PrivateScope, Public, HideBySig
    GetEA(UInt32): PrivateScope, Public, HideBySig
    GetEAPtr(UInt32): PrivateScope, Public, HideBySig
    AddElemAry(UInt32, ELEM_TYPE): PrivateScope, Public, HideBySig
    IsIdNA(UInt32): PrivateScope, Public, HideBySig
    GetAry_IdNA(): PrivateScope, Public, HideBySig
    GetNA(UInt32): PrivateScope, Public, HideBySig
    GetNAPtr(UInt32): PrivateScope, Public, HideBySig
    AddNodeAry(UInt32): PrivateScope, Public, HideBySig
    IsIdField(UInt32): PrivateScope, Public, HideBySig
    GetAry_IdField(): PrivateScope, Public, HideBySig
    GetField(UInt32): PrivateScope, Public, HideBySig
    GetFieldPtr(UInt32): PrivateScope, Public, HideBySig
    MakeField_FieldElemAry(UInt32, UInt32, FIELD_TYPE, FIELD_DERIVATION_TYPE, ELSEG_TYPE): PrivateScope, Public, HideBySig
    MakeField_FieldElemAry(UInt32, UInt32): PrivateScope, Public, HideBySig
    MakeField_FieldElemDim(UInt32, Int32, FIELD_TYPE, FIELD_DERIVATION_TYPE, ELSEG_TYPE): PrivateScope, Public, HideBySig
    MakeField_FieldElemDim(UInt32, Int32, FIELD_TYPE): PrivateScope, Public, HideBySig
    MakeField_FieldElemDim(UInt32, Int32): PrivateScope, Public, HideBySig
    AddField(UInt32, IList`1, CNodeSegInNodeAry, CNodeSegInNodeAry, UInt32): PrivateScope, Public, HideBySig
    AddField(UInt32, IList`1, CNodeSegInNodeAry, CNodeSegInNodeAry): PrivateScope, Public, HideBySig
    GetPartialField(UInt32, IList`1): PrivateScope, Public, HideBySig
    GetPartialField(UInt32, UInt32): PrivateScope, Public, HideBySig
    UpdateMeshCoord(UInt32, UInt32, IMesh): PrivateScope, Public, HideBySig
    UpdateMeshCoord(UInt32, IMesh): PrivateScope, Public, HideBySig
    UpdateConnectivity(UInt32, IMesh): PrivateScope, Public, HideBySig
    UpdateConnectivity_CustomBaseField(UInt32, IList`1, IList`1, IList`1): PrivateScope, Public, HideBySig
    UpdateConnectivity_HingeField_Tri(UInt32, UInt32): PrivateScope, Public, HideBySig
    UpdateConnectivity_EdgeField_Tri(UInt32, UInt32): PrivateScope, Public, HideBySig
    DeleteField(IList`1): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CEval: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Field.CEval* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetExp(String): PrivateScope, Public, HideBySig
    SetKey(String, Double): PrivateScope, Public, HideBySig
    IsKeyUsed(String): PrivateScope, Public, HideBySig
    Calc(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CEval+CKey: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.String, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CKey*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Double m_Val 'get set' : 
    System.Collections.Generic.IList`1[System.UInt32] m_aiCmd 'get set' : 
    System.String m_Name 'get set' : 
    CKey* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_m_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_m_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_m_aiCmd(): PrivateScope, Public, HideBySig, SpecialName
    set_m_aiCmd(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_m_Val(): PrivateScope, Public, HideBySig, SpecialName
    set_m_Val(Double): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CValueFieldDof: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Fem.Field.CValueFieldDof*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Field.CValueFieldDof): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.String math_exp 'get set' : 
    Double val 'get set' : 
    Int32 itype 'get set' : 
    Fem.Field.CValueFieldDof* Self 'get set' : 
  Methods:
    SetValue(Double): PrivateScope, Public, HideBySig
    SetValue(String): PrivateScope, Public, HideBySig
    IsTimeDependent(): PrivateScope, Public, HideBySig
    GetValue(Double, Double&(Out)): PrivateScope, Public, HideBySig
    GetString(): PrivateScope, Public, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    set_Self(CValueFieldDof*): PrivateScope, Public, HideBySig, SpecialName
    get_itype(): PrivateScope, Public, HideBySig, SpecialName
    set_itype(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_val(): PrivateScope, Public, HideBySig, SpecialName
    set_val(Double): PrivateScope, Public, HideBySig, SpecialName
    get_math_exp(): PrivateScope, Public, HideBySig, SpecialName
    set_math_exp(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.CFieldValueSetter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt32, DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Fem.Field.CFieldValueSetter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Field.CFieldValueSetter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Field.CFieldValueSetter* Self 'get set' : 
  Methods:
    SetFieldValue_Constant(UInt32, UInt32, FIELD_DERIVATION_TYPE, CFieldWorld, Double): PrivateScope, Public, Static, HideBySig
    SetFieldValue_MathExp(UInt32, UInt32, FIELD_DERIVATION_TYPE, CFieldWorld, String, Double): PrivateScope, Public, Static, HideBySig
    SetFieldValue_MathExp(UInt32, UInt32, FIELD_DERIVATION_TYPE, CFieldWorld, String): PrivateScope, Public, Static, HideBySig
    SetFieldValue_Random(UInt32, UInt32, FIELD_DERIVATION_TYPE, CFieldWorld, Double, Double): PrivateScope, Public, Static, HideBySig
    SetFieldValue_Copy(UInt32, FIELD_DERIVATION_TYPE, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    SetFieldValue_Gradient(UInt32, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    set_Self(CFieldValueSetter*): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    SetMathExp(String, UInt32, FIELD_DERIVATION_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    SetConstant(Double, UInt32, FIELD_DERIVATION_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    SetGradient(UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    ExecuteValue(Double, CFieldWorld): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMatVec.CMat_BlkCrs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetMatVec.CMat_BlkCrs, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, System.Collections.Generic.IList`1[System.UInt32], UInt32, System.Collections.Generic.IList`1[System.UInt32]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32, UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MatVec.CMat_BlkCrs*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMatVec.CMat_BlkCrs): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    MatVec.CMat_BlkCrs* Self 'get ' : 
  Methods:
    CreateNativeInstance(CMat_BlkCrs* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Initialize(UInt32, IList`1, UInt32, IList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Initialize(UInt32, UInt32, UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NBlkMatCol(): PrivateScope, Public, HideBySig
    NBlkMatRow(): PrivateScope, Public, HideBySig
    LenBlkCol(UInt32): PrivateScope, Public, HideBySig
    LenBlkCol(): PrivateScope, Public, HideBySig
    LenBlkRow(UInt32): PrivateScope, Public, HideBySig
    LenBlkRow(): PrivateScope, Public, HideBySig
    SetZero(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeletePattern(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FillPattern(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPattern(CMat_BlkCrs, COrdering_Blk, COrdering_Blk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPattern(CMat_BlkCrs, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPattern(CIndexedArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPatternBoundary(CMat_BlkCrs, CBCFlag, CBCFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPatternDia(CMat_BlkCrs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetValue(CMat_BlkCrs, COrdering_Blk, COrdering_Blk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetValue(CMat_BlkCrs, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Mearge(UInt32, UInt32[], UInt32, UInt32[], UInt32, Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteMargeTmpBuffer(): PrivateScope, Public, HideBySig
    MatVec(Double, CVector_Blk, Double, CVector_Blk&, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBoundaryCondition_Row(CBCFlag): PrivateScope, Public, HideBySig
    SetBoundaryCondition_Colum(CBCFlag): PrivateScope, Public, HideBySig
    SetBoundaryConditionInverse_Colum(CBCFlag): PrivateScope, Public, HideBySig
    NCrs(): PrivateScope, Public, HideBySig
    GetPtrIndPSuP(UInt32, UInt32&(Out)): PrivateScope, Public, HideBySig
    GetPtrValPSuP(UInt32, UInt32&(Out)): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMatVec.CMat_BlkCrs_Ptr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetMatVec.CMat_BlkCrs
    Void .ctor(MatVec.CMat_BlkCrs*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetMatVec.CMatDia_BlkCrs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetMatVec.CMat_BlkCrs
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MatVec.CMatDia_BlkCrs*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMatVec.CMatDia_BlkCrs): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MatVec.CMatDia_BlkCrs* Self 'get ' : 
  Methods:
    CreateNativeInstance(CMatDia_BlkCrs* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Initialize(UInt32, UInt32): PrivateScope, Public, HideBySig
    Initialize(UInt32, UInt32, UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig
    Initialize(UInt32, IList`1): PrivateScope, Public, HideBySig
    Initialize(UInt32, IList`1, UInt32, IList`1): PrivateScope, Public, Virtual, HideBySig
    DeletePattern(): PrivateScope, Public, Virtual, HideBySig
    AddPattern(CMat_BlkCrs, CMatDia_BlkCrs, CMat_BlkCrs): PrivateScope, Public, HideBySig
    AddPattern(CMatDia_BlkCrs, COrdering_Blk): PrivateScope, Public, HideBySig
    AddPattern(CMatDia_BlkCrs, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddPattern(CIndexedArray): PrivateScope, Public, Virtual, HideBySig
    SetValue(CMatDia_BlkCrs, COrdering_Blk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetValue(CMat_BlkCrs, CMatDia_BlkCrs, CMat_BlkCrs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetValue(CMatDia_BlkCrs, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetZero(): PrivateScope, Public, Virtual, HideBySig
    Mearge(UInt32, UInt32[], UInt32, UInt32[], UInt32, Double[]): PrivateScope, Public, Virtual, HideBySig
    MatVec(Double, CVector_Blk, Double, CVector_Blk&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBoundaryCondition(CBCFlag): PrivateScope, Public, HideBySig
    GetPtrValDia(UInt32): PrivateScope, Public, HideBySig
Class DelFEM4NetMatVec.CMatDia_BlkCrs_Ptr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetMatVec.CMatDia_BlkCrs
    Void .ctor(MatVec.CMatDia_BlkCrs*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetMatVec.CVector_Blk: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt32, System.Collections.Generic.List`1[System.UInt32]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MatVec.CVector_Blk*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMatVec.CVector_Blk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    MatVec.CVector_Blk* Self 'get ' : 
  Methods:
    op_Multiply(CVector_Blk, CVector_Blk): PrivateScope, Public, Static, HideBySig, SpecialName
    CreateNativeInstance(CVector_Blk* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Initialize(UInt32, List`1): PrivateScope, Public, HideBySig
    Initialize(UInt32, UInt32): PrivateScope, Public, HideBySig
    op_MultiplicationAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(CVector_Blk): PrivateScope, Public, HideBySig, SpecialName
    op_AdditionAssignment(CVector_Blk): PrivateScope, Public, HideBySig, SpecialName
    AXPY(Double, CVector_Blk): PrivateScope, Public, HideBySig
    SetVectorZero(): PrivateScope, Public, HideBySig
    GetSquaredVectorNorm(): PrivateScope, Public, HideBySig
    NBlk(): PrivateScope, Public, HideBySig
    Len(UInt32): PrivateScope, Public, HideBySig
    Len(): PrivateScope, Public, HideBySig
    GetValue(UInt32, UInt32): PrivateScope, Public, HideBySig
    SetValue(UInt32, UInt32, Double): PrivateScope, Public, HideBySig
    AddValue(UInt32, UInt32, Double): PrivateScope, Public, HideBySig
    GetValuePtr(UInt32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMatVec.CVector_Blk_Ptr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetMatVec.CVector_Blk
    Void .ctor(MatVec.CVector_Blk*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface DelFEM4NetLsSol.ILinearSystem_Sol: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    LsSol.ILinearSystem_Sol* SolSelf 'get ' : 
  Methods:
    get_SolSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetTmpVectorArySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReSizeTmpVecSolver(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DOT(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    COPY(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SCAL(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AXPY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MATVEC(Double, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DelFEM4NetLsSol.ILinearSystemPreconditioner_Sol: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    LsSol.ILinearSystemPreconditioner_Sol* SolSelf 'get ' : 
  Methods:
    get_SolSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetTmpVectorArySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReSizeTmpVecSolver(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DOT(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    COPY(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SCAL(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AXPY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MATVEC(Double, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SolvePrecond(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DelFEM4NetLsSol.CLinearSystem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetLsSol.ILinearSystem_Sol
    System.IDisposable
  Properties:
    LsSol.ILinearSystem_Sol* SolSelf 'get ' : 
    LsSol.CLinearSystem* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_SolSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearFixedBoundaryCondition(): PrivateScope, Public, HideBySig
    InitializeMarge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FinalizeMarge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTmpVectorArySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReSizeTmpVecSolver(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DOT(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    COPY(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCAL(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AXPY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MATVEC(Double, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddLinSysSeg(UInt32, IList`1): PrivateScope, Public, HideBySig
    AddLinSysSeg(UInt32, UInt32): PrivateScope, Public, HideBySig
    GetNLinSysSeg(): PrivateScope, Public, HideBySig
    GetBlkSizeLinSeg(UInt32): PrivateScope, Public, HideBySig
    IsMatrix(UInt32, UInt32): PrivateScope, Public, HideBySig
    GetMatrix(UInt32, UInt32): PrivateScope, Public, HideBySig
    GetMatrix(UInt32): PrivateScope, Public, HideBySig
    GetVector(Int32, UInt32): PrivateScope, Public, HideBySig
    GetBCFlag(UInt32): PrivateScope, Public, HideBySig
    GetMatrixPtr(UInt32, UInt32): PrivateScope, Public, HideBySig
    GetMatrixPtr(UInt32): PrivateScope, Public, HideBySig
    GetVectorPtr(Int32, UInt32): PrivateScope, Public, HideBySig
    GetBCFlagPtr(UInt32): PrivateScope, Public, HideBySig
    AddMat_NonDia(UInt32, UInt32, CIndexedArray): PrivateScope, Public, HideBySig
    AddMat_Dia(UInt32, CIndexedArray): PrivateScope, Public, HideBySig
    GetResidualPtr(UInt32): PrivateScope, Public, HideBySig
    GetUpdatePtr(UInt32): PrivateScope, Public, HideBySig
    GetMatrixPtr_DirectAccess(UInt32, UInt32): PrivateScope, Public, HideBySig
    GetMatrixPtr_DirectAccess(UInt32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetLsSol.CLinearSystemAccesser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetLsSol.CLinearSystem
    Void .ctor(LsSol.CLinearSystem*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetMatVec.COrdering_Blk: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    MatVec.COrdering_Blk* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetOrdering(IList`1): PrivateScope, Public, HideBySig
    MakeOrdering_RCM(CMatDia_BlkCrs): PrivateScope, Public, HideBySig
    MakeOrdering_RCM2(CMatDia_BlkCrs): PrivateScope, Public, HideBySig
    MakeOrdering_AMD(CMatDia_BlkCrs): PrivateScope, Public, HideBySig
    NBlk(): PrivateScope, Public, HideBySig
    NewToOld(UInt32): PrivateScope, Public, HideBySig
    OldToNew(UInt32): PrivateScope, Public, HideBySig
    OrderingVector_NewToOld(CVector_Blk&(Out), CVector_Blk): PrivateScope, Public, HideBySig
    OrderingVector_OldToNew(CVector_Blk&(Out), CVector_Blk): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Interface DelFEM4NetLsSol.CPreconditioner: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    LsSol.CPreconditioner* PrecondSelf 'get ' : 
  Methods:
    get_PrecondSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    SetLinearSystem(CLinearSystem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetValue(CLinearSystem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SolvePrecond(CLinearSystem, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DelFEM4NetLsSol.CPreconditioner_ILU: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetLsSol.CLinearSystem, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetLsSol.CLinearSystem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetLsSol.CPreconditioner
    System.IDisposable
  Properties:
    LsSol.CPreconditioner* PrecondSelf 'get ' : 
    LsSol.CPreconditioner_ILU* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_PrecondSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    SetFillInLevel(Int32, Int32): PrivateScope, Public, HideBySig
    SetFillInLevel(Int32): PrivateScope, Public, HideBySig
    SetFillBlk(IList`1): PrivateScope, Public, HideBySig
    SetLinearSystem(CLinearSystem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetValue(CLinearSystem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SolvePrecond(CLinearSystem, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetOrdering(IList`1): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetLsSol.CLinearSystemPreconditioner: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetLsSol.CLinearSystem, DelFEM4NetLsSol.CPreconditioner): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetLsSol.ILinearSystemPreconditioner_Sol
    System.IDisposable
  Properties:
    LsSol.ILinearSystemPreconditioner_Sol* SolSelf 'get ' : 
    LsSol.CLinearSystemPreconditioner* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_SolSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetTmpVectorArySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReSizeTmpVecSolver(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DOT(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    COPY(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCAL(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AXPY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MATVEC(Double, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SolvePrecond(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetLsSol.CSolverLsIter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Solve_CG(Double&, UInt32&, ILinearSystem_Sol): PrivateScope, Public, Static, HideBySig
    Solve_PCG(Double&, UInt32&, ILinearSystemPreconditioner_Sol): PrivateScope, Public, Static, HideBySig
    Solve_BiCGSTAB(Double&, UInt32&, ILinearSystem_Sol): PrivateScope, Public, Static, HideBySig
    Solve_PBiCGSTAB(Double&, UInt32&, ILinearSystemPreconditioner_Sol): PrivateScope, Public, Static, HideBySig
Interface DelFEM4NetFem.Eqn.ILinearSystem_Eqn: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    Fem.Eqn.ILinearSystem_Eqn* EqnSelf 'get ' : 
  Methods:
    get_EqnSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetMatrix(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMatrix(UInt32, ELSEG_TYPE, UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetResidual(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DelFEM4NetFem.Ls.CLinearSystem_Field: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetLsSol.ILinearSystem_Sol
    DelFEM4NetFem.Eqn.ILinearSystem_Eqn
    System.IDisposable
  Properties:
    Fem.Eqn.ILinearSystem_Eqn* EqnSelf 'get ' : 
    LsSol.ILinearSystem_Sol* SolSelf 'get ' : 
    Fem.Ls.CLinearSystem_Field* Self 'get ' : 
  Methods:
    BoundaryCondition(UInt32, ELSEG_TYPE, UInt32, CBCFlag, CFieldWorld): PrivateScope, Public, Static, HideBySig
    BoundaryCondition(UInt32, ELSEG_TYPE, CBCFlag&, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    BoundaryCondition(UInt32, ELSEG_TYPE, CBCFlag&, CFieldWorld): PrivateScope, Public, Static, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_SolSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EqnSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetResidual(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUpdate(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetResidualPtr(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUpdatePtr(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMatrix(UInt32, ELSEG_TYPE, UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMatrix(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMatrixPtr(UInt32, ELSEG_TYPE, UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMatrixPtr(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitializeMarge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FinalizeMarge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPattern_Field(UInt32, UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPattern_Field(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPattern_CombinedField(UInt32, UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearFixedBoundaryCondition(): PrivateScope, Public, HideBySig
    SetFixedBoundaryCondition_Field(UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    SetFixedBoundaryCondition_Field(UInt32, UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    MakeResidual(CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateValueOfField(UInt32, CFieldWorld, FIELD_DERIVATION_TYPE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateValueOfField_RotCRV(UInt32, CFieldWorld, FIELD_DERIVATION_TYPE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateValueOfField_Newmark(Double, Double, UInt32, CFieldWorld, FIELD_DERIVATION_TYPE, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UpdateValueOfField_NewmarkBeta(Double, Double, Double, UInt32, CFieldWorld, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UpdateValueOfField_BackwardEular(Double, UInt32, CFieldWorld, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    FindIndexArray_Seg(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    GetNLynSysSeg(): PrivateScope, Public, HideBySig
    GetTmpVectorArySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReSizeTmpVecSolver(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DOT(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    COPY(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCAL(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AXPY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MATVEC(Double, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLs(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Eqn.CEqn_Fluid2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Fem.Eqn.CEqn_Fluid2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Eqn.CEqn_Fluid2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Eqn.CEqn_Fluid2D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    IsNavierStokes(): PrivateScope, Public, HideBySig
    SetRho(Double): PrivateScope, Public, HideBySig
    GetRho(): PrivateScope, Public, HideBySig
    SetMyu(Double): PrivateScope, Public, HideBySig
    GetMyu(): PrivateScope, Public, HideBySig
    SetBodyForce(Double, Double): PrivateScope, Public, HideBySig
    SetStokes(): PrivateScope, Public, HideBySig
    SetNavierStokes(): PrivateScope, Public, HideBySig
    SetNavierStokesALE(UInt32): PrivateScope, Public, HideBySig
    AddLinSys(CLinearSystem_Field, CFieldWorld): PrivateScope, Public, HideBySig
    AddLinSys_NewmarkBetaAPrime(Double, Double, Double, Boolean(HasFieldMarshal), CLinearSystem_Field, CFieldWorld): PrivateScope, Public, HideBySig
    GetIdEA(): PrivateScope, Public, HideBySig
    SetIdEA(UInt32): PrivateScope, Public, HideBySig
    SetIdFieldVelocity(UInt32): PrivateScope, Public, HideBySig
    SetIdFieldPressure(UInt32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Eqn.CEqnSystem_Fluid2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Eqn.CEqnSystem
    Void .ctor(UInt32, DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Eqn.CEqnSystem_Fluid2D* Self 'get ' : 
    Fem.Eqn.CEqnSystem* EqnSysSelf 'get ' : 
  Methods:
    get_EqnSysSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    UpdateDomain_Field(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateDomain_FieldVeloPress(UInt32, UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateDomain_FieldElemAry(UInt32, UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddFixField(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    AddFixElemAry(IList`1, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    AddFixElemAry(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    ClearFixElemAry(): PrivateScope, Public, Virtual, HideBySig
    ClearFixElemAry(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    Solve(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    GetIdField_Velo(): PrivateScope, Public, HideBySig
    GetIdField_Press(): PrivateScope, Public, HideBySig
    SetIsStationary(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetIsStationary(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
    GetAry_EqnIdEA(): PrivateScope, Public, HideBySig
    GetEquation(UInt32): PrivateScope, Public, HideBySig
    SetEquation(CEqn_Fluid2D): PrivateScope, Public, HideBySig
    UpdateIdEA(IList`1): PrivateScope, Public, HideBySig
    SetNavierStokes(): PrivateScope, Public, HideBySig
    SetNavierStokesALE(UInt32): PrivateScope, Public, HideBySig
    SetForceField(UInt32): PrivateScope, Public, HideBySig
    SetInterpolationBubble(): PrivateScope, Public, HideBySig
    UnSetInterpolationBubble(): PrivateScope, Public, HideBySig
    SetRho(Double): PrivateScope, Public, HideBySig
    SetMyu(Double): PrivateScope, Public, HideBySig
    SetStokes(): PrivateScope, Public, HideBySig
Class DelFEM4NetFem.Eqn.CEqn_Fluid3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Eqn.CEqnSystem
    Void .ctor(UInt32, DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Eqn.CEqn_Fluid3D* Self 'get ' : 
    Fem.Eqn.CEqnSystem* EqnSysSelf 'get ' : 
  Methods:
    get_EqnSysSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetDomain(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Solve(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    AddFixField(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    AddFixElemAry(IList`1, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    AddFixElemAry(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    ClearFixElemAry(): PrivateScope, Public, Virtual, HideBySig
    ClearFixElemAry(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    SetGravitation(Double, Double, Double): PrivateScope, Public, HideBySig
    GetIDField_Velo(): PrivateScope, Public, HideBySig
    GetIDField_Press(): PrivateScope, Public, HideBySig
Struct DelFEM4NetFem.Field.ELSEG_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DelFEM4NetFem.Field.ELSEG_TYPE CORNER = 1 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.ELSEG_TYPE EDGE = 2 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.ELSEG_TYPE BUBBLE = 4 : Public, Static, Literal, HasDefault
Struct DelFEM4NetFem.Field.ELEM_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DelFEM4NetFem.Field.ELEM_TYPE ELEM_TYPE_NOT_SET = 0 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.ELEM_TYPE POINT = 1 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.ELEM_TYPE LINE = 2 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.ELEM_TYPE TRI = 3 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.ELEM_TYPE QUAD = 4 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.ELEM_TYPE TET = 5 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.ELEM_TYPE HEX = 6 : Public, Static, Literal, HasDefault
Struct DelFEM4NetFem.Field.FIELD_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DelFEM4NetFem.Field.FIELD_TYPE NO_VALUE = 0 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.FIELD_TYPE SCALAR = 1 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.FIELD_TYPE VECTOR2 = 2 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.FIELD_TYPE VECTOR3 = 3 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.FIELD_TYPE STSR2 = 4 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.FIELD_TYPE ZSCALAR = 5 : Public, Static, Literal, HasDefault
Struct DelFEM4NetFem.Field.FIELD_DERIVATION_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DelFEM4NetFem.Field.FIELD_DERIVATION_TYPE VALUE = 1 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.FIELD_DERIVATION_TYPE VELOCITY = 2 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.FIELD_DERIVATION_TYPE ACCELERATION = 4 : Public, Static, Literal, HasDefault
Struct DelFEM4NetFem.Field.INTERPOLATION_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DelFEM4NetFem.Field.INTERPOLATION_TYPE LINE11 = 0 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.INTERPOLATION_TYPE TRI11 = 1 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.INTERPOLATION_TYPE TRI1001 = 2 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.INTERPOLATION_TYPE TRI1011 = 3 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.INTERPOLATION_TYPE TET11 = 4 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.INTERPOLATION_TYPE TET1001 = 5 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.INTERPOLATION_TYPE HEX11 = 6 : Public, Static, Literal, HasDefault
    DelFEM4NetFem.Field.INTERPOLATION_TYPE HEX1001 = 7 : Public, Static, Literal, HasDefault
Class DelFEM4NetFem.Ls.CLinearSystem_Save: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Ls.CLinearSystem_Field
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Ls.CLinearSystem_Save* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    AddPattern_Field(UInt32, UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    AddPattern_Field(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    AddPattern_CombinedField(UInt32, UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    GetMatrix_Boundary(UInt32, ELSEG_TYPE, UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    GetMatrixPtr_Boundary(UInt32, ELSEG_TYPE, UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    GetForce(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    GetForcePtr(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    InitializeMarge(): PrivateScope, Public, Virtual, HideBySig
    FinalizeMarge(): PrivateScope, Public, Virtual, HideBySig
    MakeResidual(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    UpdateValueOfField(UInt32, CFieldWorld, FIELD_DERIVATION_TYPE): PrivateScope, Public, Virtual, HideBySig
Class DelFEM4NetFem.Ls.CLinearSystem_SaveDiaM_Newmark: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Ls.CLinearSystem_Save
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Ls.CLinearSystem_SaveDiaM_Newmark* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetNewmarkParameter(Double, Double): PrivateScope, Public, HideBySig
    GetGamma(): PrivateScope, Public, HideBySig
    GetDt(): PrivateScope, Public, HideBySig
    AddPattern_Field(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    InitializeMarge(): PrivateScope, Public, Virtual, HideBySig
    FinalizeMarge(): PrivateScope, Public, Virtual, HideBySig
    MakeResidual(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    UpdateValueOfField(UInt32, CFieldWorld, FIELD_DERIVATION_TYPE): PrivateScope, Public, Virtual, HideBySig
    GetDiaMassMatrix(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
Class DelFEM4NetFem.Ls.CLinearSystem_SaveDiaM_NewmarkBeta: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Ls.CLinearSystem_Save
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Ls.CLinearSystem_SaveDiaM_NewmarkBeta* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetNewmarkParameter(Double, Double, Double): PrivateScope, Public, HideBySig
    GetGamma(): PrivateScope, Public, HideBySig
    GetDt(): PrivateScope, Public, HideBySig
    GetBeta(): PrivateScope, Public, HideBySig
    GetDiaMassMatrix(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    AddPattern_Field(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    AddPattern_CombinedField(UInt32, UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    InitializeMarge(): PrivateScope, Public, Virtual, HideBySig
    FinalizeMarge(): PrivateScope, Public, Virtual, HideBySig
    MakeResidual(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    UpdateValueOfField(UInt32, CFieldWorld, FIELD_DERIVATION_TYPE): PrivateScope, Public, Virtual, HideBySig
Class DelFEM4NetFem.Ls.CLinearSystem_Eigen: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Ls.CLinearSystem_Field
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Ls.CLinearSystem_Eigen* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, Virtual, HideBySig
    AddPattern_Field(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    InitializeMarge(): PrivateScope, Public, Virtual, HideBySig
    GetDiaMassMatrix(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    SetVector_fromField(Int32, UInt32, CFieldWorld, FIELD_DERIVATION_TYPE): PrivateScope, Public, HideBySig
    DecompMultMassMatrix(): PrivateScope, Public, HideBySig
    MultUpdateInvMassDecomp(): PrivateScope, Public, HideBySig
    MultVecMassDecomp(Int32): PrivateScope, Public, HideBySig
    OffsetDiagonal(Double): PrivateScope, Public, HideBySig
Class DelFEM4NetFem.Eqn.CEqn_Scalar2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Fem.Eqn.CEqn_Scalar2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Eqn.CEqn_Scalar2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Eqn.CEqn_Scalar2D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetAlpha(Double): PrivateScope, Public, HideBySig
    SetCapacity(Double): PrivateScope, Public, HideBySig
    SetSource(Double): PrivateScope, Public, HideBySig
    SetAdvection(UInt32): PrivateScope, Public, HideBySig
    GetAlpha(): PrivateScope, Public, HideBySig
    GetCapacity(): PrivateScope, Public, HideBySig
    GetSource(): PrivateScope, Public, HideBySig
    GetIdEA(): PrivateScope, Public, HideBySig
    IsAdvection(): PrivateScope, Public, HideBySig
    AddLinSys(CLinearSystem_Field, CFieldWorld): PrivateScope, Public, HideBySig
    AddLinSys_Newmark(Double, Double, CLinearSystem_Field, Boolean(HasFieldMarshal), CFieldWorld): PrivateScope, Public, HideBySig
    AddLinSys_Save(CLinearSystem_Save, CFieldWorld): PrivateScope, Public, HideBySig
    AddLinSys_SaveKDiaC(CLinearSystem_SaveDiaM_Newmark, CFieldWorld): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Eqn.CEqnSystem_Scalar2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Eqn.CEqnSystem
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Eqn.CEqnSystem_Scalar2D* Self 'get ' : 
    Fem.Eqn.CEqnSystem* EqnSysSelf 'get ' : 
  Methods:
    get_EqnSysSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetDomain_Field(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDomain_FieldElemAry(UInt32, UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Solve(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    AddFixField(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    AddFixElemAry(IList`1, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    AddFixElemAry(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    ClearFixElemAry(): PrivateScope, Public, Virtual, HideBySig
    ClearFixElemAry(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    GetIdField_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEquation(CEqn_Scalar2D): PrivateScope, Public, HideBySig
    GetEquation(UInt32): PrivateScope, Public, HideBySig
    SetAlpha(Double): PrivateScope, Public, HideBySig
    SetCapacity(Double): PrivateScope, Public, HideBySig
    SetSource(Double): PrivateScope, Public, HideBySig
    SetStationary(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetAdvection(UInt32): PrivateScope, Public, HideBySig
    SetAxialSymmetry(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetSaveStiffMat(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
Class DelFEM4NetFem.Eqn.CEqn_Scalar3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Eqn.CEqnSystem
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Eqn.CEqn_Scalar3D* Self 'get ' : 
    Fem.Eqn.CEqnSystem* EqnSysSelf 'get ' : 
  Methods:
    get_EqnSysSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetDomain(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Solve(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    AddFixField(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    AddFixElemAry(IList`1, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    AddFixElemAry(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    ClearFixElemAry(): PrivateScope, Public, Virtual, HideBySig
    ClearFixElemAry(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    GetIdField_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAlpha(Double): PrivateScope, Public, HideBySig
    SetSource(Double): PrivateScope, Public, HideBySig
Class DelFEM4NetFem.Eqn.CEqn_Solid3D_Linear: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Eqn.CEqnSystem
    Void .ctor(UInt32, DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Eqn.CEqn_Solid3D_Linear* Self 'get ' : 
    Fem.Eqn.CEqnSystem* EqnSysSelf 'get ' : 
  Methods:
    get_EqnSysSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetDomain_Field(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Solve(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    AddFixField(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    AddFixElemAry(IList`1, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    AddFixElemAry(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    ClearFixElemAry(): PrivateScope, Public, Virtual, HideBySig
    ClearFixElemAry(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    GetIdField_Disp(): PrivateScope, Public, HideBySig
    SetYoungPoisson(Double, Double): PrivateScope, Public, HideBySig
    SetGravitation(Double, Double, Double): PrivateScope, Public, HideBySig
    SetGeometricalNonLinear(): PrivateScope, Public, HideBySig
    UnSetGeometricalNonLinear(): PrivateScope, Public, HideBySig
    SetSaveStiffMat(): PrivateScope, Public, HideBySig
    UnSetSaveStiffMat(): PrivateScope, Public, HideBySig
    SetStationary(): PrivateScope, Public, HideBySig
    UnSetStationary(): PrivateScope, Public, HideBySig
Class DelFEM4NetFem.Eqn.CEqn_Solid2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Fem.Eqn.CEqn_Solid2D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Eqn.CEqn_Solid2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Eqn.CEqn_Solid2D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetIdField_Disp(): PrivateScope, Public, HideBySig
    CopyParameters(CEqn_Solid2D): PrivateScope, Public, HideBySig
    SetYoungPoisson(Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetLambdaMyu(Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    GetRho(): PrivateScope, Public, HideBySig
    GetYoungPoisson(Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    SetRho(Double): PrivateScope, Public, HideBySig
    SetGravitation(Double, Double): PrivateScope, Public, HideBySig
    GetGravitation(Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    SetIdFieldDisp(UInt32): PrivateScope, Public, HideBySig
    SetGeometricalNonlinear(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetThermalStress(UInt32): PrivateScope, Public, HideBySig
    GetIdEA(): PrivateScope, Public, HideBySig
    IsTemperature(): PrivateScope, Public, HideBySig
    IsGeometricalNonlinear(): PrivateScope, Public, HideBySig
    AddLinSys_NewmarkBetaAPrime(Double, Double, Double, Boolean(HasFieldMarshal), CLinearSystem_Field, CFieldWorld): PrivateScope, Public, HideBySig
    AddLinSys_NewmarkBetaAPrime_Save(CLinearSystem_SaveDiaM_NewmarkBeta, CFieldWorld): PrivateScope, Public, HideBySig
    AddLinSys(CLinearSystem_Field, CFieldWorld): PrivateScope, Public, HideBySig
    AddLinSys_Save(CLinearSystem_Save, CFieldWorld): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Eqn.CEqnSystem_Solid2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Eqn.CEqnSystem
    Void .ctor(UInt32, DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Eqn.CEqnSystem_Solid2D* Self 'get ' : 
    Fem.Eqn.CEqnSystem* EqnSysSelf 'get ' : 
  Methods:
    get_EqnSysSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    UpdateDomain_Field(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDomain_FieldEA(UInt32, UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Solve(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
    AddFixField(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    AddFixElemAry(IList`1, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    AddFixElemAry(UInt32, CFieldWorld, Int32): PrivateScope, Public, Virtual, HideBySig
    ClearFixElemAry(): PrivateScope, Public, Virtual, HideBySig
    ClearFixElemAry(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    GetIdField_Disp(): PrivateScope, Public, HideBySig
    SetEquation(CEqn_Solid2D): PrivateScope, Public, HideBySig
    GetEquation(UInt32): PrivateScope, Public, HideBySig
    SetYoungPoisson(Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetRho(Double): PrivateScope, Public, HideBySig
    SetGravitation(Double, Double): PrivateScope, Public, HideBySig
    SetThermalStress(UInt32): PrivateScope, Public, HideBySig
    SetGeometricalNonlinear(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetStationary(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetSaveStiffMat(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsStationary(): PrivateScope, Public, HideBySig
    IsSaveStiffMat(): PrivateScope, Public, HideBySig
    GetYoungPoisson(Double&(Out), Double&(Out), Boolean&(Out)): PrivateScope, Public, HideBySig
    IsGeometricalNonlinear(): PrivateScope, Public, HideBySig
    GetRho(): PrivateScope, Public, HideBySig
    SetLoad(Double, UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    ClearLoad(): PrivateScope, Public, HideBySig
    ClearLoad(UInt32): PrivateScope, Public, HideBySig
    SetEquivStressValue(UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    SetStressValue(UInt32, CFieldWorld): PrivateScope, Public, HideBySig
Class DelFEM4NetFem.Eqn.CEqnAdvectionDiffusion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddLinSys_AdvectionDiffusion_Static(CLinearSystem_Save, Double, Double, CFieldWorld, UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_AdvectionDiffusion_Static(CLinearSystem_Save, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_AdvectionDiffusion_Static(CLinearSystem_Field, Double, Double, CFieldWorld, UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_AdvectionDiffusion_Static(CLinearSystem_Field, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_AdvectionDiffusion_NonStatic_Newmark(CLinearSystem_SaveDiaM_Newmark, Double, Double, Double, CFieldWorld, UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_AdvectionDiffusion_NonStatic_Newmark(CLinearSystem_SaveDiaM_Newmark, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_AdvectionDiffusion_NonStatic_Newmark(Double, Double, CLinearSystem_Field, Double, Double, Double, CFieldWorld, UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_AdvectionDiffusion_NonStatic_Newmark(Double, Double, CLinearSystem_Field, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetMatVec.CZVector_Blk: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MatVec.CZVector_Blk*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMatVec.CZVector_Blk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    MatVec.CZVector_Blk* Self 'get ' : 
  Methods:
    op_Multiply(CZVector_Blk, CZVector_Blk): PrivateScope, Public, Static, HideBySig, SpecialName
    InnerProduct(CZVector_Blk, CZVector_Blk): PrivateScope, Public, Static, HideBySig
    CreateNativeInstance(CZVector_Blk* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    op_MultiplicationAssignment(Complex): PrivateScope, Public, HideBySig, SpecialName
    op_MultiplicationAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(CZVector_Blk): PrivateScope, Public, HideBySig, SpecialName
    op_AdditionAssignment(CZVector_Blk): PrivateScope, Public, HideBySig, SpecialName
    AXPY(Complex, CZVector_Blk): PrivateScope, Public, HideBySig
    AXPY(Double, CZVector_Blk): PrivateScope, Public, HideBySig
    SetVectorZero(): PrivateScope, Public, HideBySig
    GetSquaredVectorNorm(): PrivateScope, Public, HideBySig
    SetVectorConjugate(): PrivateScope, Public, HideBySig
    BlkLen(): PrivateScope, Public, HideBySig
    BlkVecLen(): PrivateScope, Public, HideBySig
    GetValue(UInt32, UInt32): PrivateScope, Public, HideBySig
    SetValue(UInt32, UInt32, Complex): PrivateScope, Public, HideBySig
    AddValue(UInt32, UInt32, Complex): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMatVec.CZVector_Blk_Ptr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetMatVec.CZVector_Blk
    Void .ctor(MatVec.CZVector_Blk*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetMatVec.CBCFlag: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt32, System.Collections.Generic.IList`1[System.UInt32]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MatVec.CBCFlag*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMatVec.CBCFlag): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    MatVec.CBCFlag* Self 'get ' : 
  Methods:
    CreateNativeInstance(CBCFlag* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    LenBlk(UInt32): PrivateScope, Public, HideBySig
    LenBlk(): PrivateScope, Public, HideBySig
    NBlk(): PrivateScope, Public, HideBySig
    GetBCFlag(UInt32, UInt32): PrivateScope, Public, HideBySig
    SetAllFlagZero(): PrivateScope, Public, HideBySig
    SetZeroToBCDof(CZVector_Blk): PrivateScope, Public, HideBySig
    SetZeroToBCDof(CVector_Blk): PrivateScope, Public, HideBySig
    SetBC(UInt32, UInt32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMatVec.CBCFlag_Ptr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetMatVec.CBCFlag
    Void .ctor(MatVec.CBCFlag*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetFem.Eqn.CEqnDiffusion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddLinSys_Diffusion(CLinearSystem_SaveDiaM_Newmark, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_Diffusion(CLinearSystem_SaveDiaM_Newmark, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_Diffusion(Double, Double, CLinearSystem_Field, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_Diffusion(Double, Double, CLinearSystem_Field, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_Diffusion_AxSym(Double, Double, CLinearSystem_Field, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_Diffusion_AxSym(Double, Double, CLinearSystem_Field, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetMatVec.CDiaMat_Blk: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MatVec.CDiaMat_Blk*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMatVec.CDiaMat_Blk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    MatVec.CDiaMat_Blk* Self 'get ' : 
  Methods:
    CreateNativeInstance(CDiaMat_Blk* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    NBlk(): PrivateScope, Public, HideBySig
    LenBlk(): PrivateScope, Public, HideBySig
    SetZero(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Mearge(UInt32, UInt32, Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CholeskyDecomp(): PrivateScope, Public, HideBySig
    MatVec(Double, CVector_Blk, Double, CVector_Blk&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPtrValDia(UInt32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMatVec.CZMat_BlkCrs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetMatVec.CZMat_BlkCrs, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32, UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MatVec.CZMat_BlkCrs*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMatVec.CZMat_BlkCrs): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    MatVec.CZMat_BlkCrs* Self 'get ' : 
  Methods:
    CreateNativeInstance(CZMat_BlkCrs* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Initialize(UInt32, UInt32, UInt32, UInt32): PrivateScope, Public, HideBySig
    NBlkMatCol(): PrivateScope, Public, HideBySig
    NBlkMatRow(): PrivateScope, Public, HideBySig
    LenBlkCol(): PrivateScope, Public, HideBySig
    LenBlkRow(): PrivateScope, Public, HideBySig
    SetZero(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeletePattern(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPattern(CZMat_BlkCrs, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPattern(CIndexedArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetValue(CZMat_BlkCrs, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MatVec(Double, CZVector_Blk, Double, CZVector_Blk&, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBoundaryCondition_Row(CBCFlag): PrivateScope, Public, HideBySig
    SetBoundaryCondition_Colum(CBCFlag): PrivateScope, Public, HideBySig
    NCrs(): PrivateScope, Public, HideBySig
    GetPtrIndPSuP(UInt32, UInt32&(Out)): PrivateScope, Public, HideBySig
    GetPtrValPSuP(UInt32, UInt32&(Out)): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMatVec.CZMat_BlkCrs_Ptr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetMatVec.CZMat_BlkCrs
    Void .ctor(MatVec.CZMat_BlkCrs*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetMatVec.CZMatDia_BlkCrs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetMatVec.CZMat_BlkCrs
    Void .ctor(DelFEM4NetMatVec.CZMatDia_BlkCrs, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MatVec.CZMatDia_BlkCrs*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMatVec.CZMatDia_BlkCrs): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MatVec.CZMatDia_BlkCrs* Self 'get ' : 
  Methods:
    CreateNativeInstance(CZMatDia_BlkCrs* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    DeletePattern(): PrivateScope, Public, Virtual, HideBySig
    AddPattern(CZMat_BlkCrs, CZMatDia_BlkCrs, CZMat_BlkCrs): PrivateScope, Public, HideBySig
    AddPattern(CZMatDia_BlkCrs, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddPattern(CIndexedArray): PrivateScope, Public, Virtual, HideBySig
    SetValue(CZMat_BlkCrs, CZMatDia_BlkCrs, CZMat_BlkCrs): PrivateScope, Public, HideBySig
    SetValue(CZMatDia_BlkCrs, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetZero(): PrivateScope, Public, Virtual, HideBySig
    Mearge(UInt32, UInt32[], UInt32, UInt32[], UInt32, Complex[], Int32[]&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddUnitMatrix(Complex): PrivateScope, Public, HideBySig
    SetBoundaryCondition(CBCFlag): PrivateScope, Public, HideBySig
    MatVec(Double, CZVector_Blk, Double, CZVector_Blk&): PrivateScope, Public, HideBySig
    MatVec_Hermitian(Double, CZVector_Blk, Double, CZVector_Blk&): PrivateScope, Public, HideBySig
    GetPtrValDia(UInt32): PrivateScope, Public, HideBySig
Class DelFEM4NetMatVec.CZMatDia_BlkCrs_Ptr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetMatVec.CZMatDia_BlkCrs
    Void .ctor(MatVec.CZMatDia_BlkCrs*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DelFEM4NetFem.Eqn.CEqnHelmholz: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddLinSys_Helmholtz(CZLinearSystem, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_Helmholtz(CZLinearSystem, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_Helmholtz_AxalSym(CZLinearSystem, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_Helmholtz_AxalSym(CZLinearSystem, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_SommerfeltRadiationBC(CZLinearSystem, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_SommerfeltRadiationBC(CZLinearSystem, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_SommerfeltRadiationBC_AxalSym(CZLinearSystem, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_SommerfeltRadiationBC_AxalSym(CZLinearSystem, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_MassMatrixEigen_AxalSym(CZLinearSystem_GeneralEigen, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_MassMatrixEigen_AxalSym(CZLinearSystem_GeneralEigen, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetFem.Ls.CZLinearSystem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Ls.CZLinearSystem* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPattern_Field(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NormalizeVector(Int32): PrivateScope, Public, HideBySig
    GetResidualPtr(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    GetUpdatePtr(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    GetMatrixPtr(UInt32, ELSEG_TYPE, UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    GetMatrixPtr(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    GetTmpBufferSize(): PrivateScope, Public, HideBySig
    InitializeMarge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FinalizeMarge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearFixedBoundaryCondition(): PrivateScope, Public, HideBySig
    SetFixedBoundaryCondition_Field(UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    SetFixedBoundaryCondition_Field(UInt32, UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    MakeResidual(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateValueOfField(UInt32, CFieldWorld, FIELD_DERIVATION_TYPE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTmpVectorArySize(): PrivateScope, Public, HideBySig
    ReSizeTmpVecSolver(UInt32): PrivateScope, Public, HideBySig
    Conjugate(Int32): PrivateScope, Public, HideBySig
    DOT(Int32, Int32): PrivateScope, Public, HideBySig
    INPROCT(Int32, Int32): PrivateScope, Public, HideBySig
    COPY(Int32, Int32): PrivateScope, Public, HideBySig
    SCAL(Complex, Int32): PrivateScope, Public, HideBySig
    AXPY(Complex, Int32, Int32): PrivateScope, Public, HideBySig
    MatVec(Double, Int32, Double, Int32): PrivateScope, Public, HideBySig
    MatVec_Hermitian(Double, Int32, Double, Int32): PrivateScope, Public, HideBySig
    GetNLynSysSeg(): PrivateScope, Public, HideBySig
    FindIndexArray_Seg(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    IsMatrix(UInt32, UInt32): PrivateScope, Public, HideBySig
    GetMatrix(UInt32, UInt32): PrivateScope, Public, HideBySig
    GetMatrix(UInt32): PrivateScope, Public, HideBySig
    GetVector(Int32, UInt32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Ls.CZLinearSystem_GeneralEigen: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Ls.CZLinearSystem
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Ls.CZLinearSystem_GeneralEigen* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, Virtual, HideBySig
    AddPattern_Field(UInt32, CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    InitializeMarge(): PrivateScope, Public, Virtual, HideBySig
    GetDiaMassMatrixPtr(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    SetVector_fromField(Int32, UInt32, CFieldWorld, FIELD_DERIVATION_TYPE): PrivateScope, Public, HideBySig
    DecompMultMassMatrix(): PrivateScope, Public, HideBySig
    OffsetDiagonal(Double): PrivateScope, Public, HideBySig
    MultUpdateInvMassDecomp(): PrivateScope, Public, HideBySig
    MultVecMassDecomp(Int32): PrivateScope, Public, HideBySig
Class DelFEM4NetFem.Eqn.CEqnLinearSolid2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddLinSys_LinearSolid2D_Static(ILinearSystem_Eqn, Double, Double, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid2D_Static(ILinearSystem_Eqn, Double, Double, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolidThermalStress2D_Static(ILinearSystem_Eqn, Double, Double, Double, Double, Double, Double, CFieldWorld, UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolidThermalStress2D_Static(ILinearSystem_Eqn, Double, Double, Double, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid2D_NonStatic_BackwardEular(Double, ILinearSystem_Eqn, Double, Double, Double, Double, Double, CFieldWorld, UInt32, CVector_Blk, Boolean(HasFieldMarshal), UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid2D_NonStatic_BackwardEular(Double, ILinearSystem_Eqn, Double, Double, Double, Double, Double, CFieldWorld, UInt32, CVector_Blk): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid2D_NonStatic_NewmarkBeta(Double, Double, Double, ILinearSystem_Eqn, Double, Double, Double, Double, Double, CFieldWorld, UInt32, Boolean(HasFieldMarshal), UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid2D_NonStatic_NewmarkBeta(Double, Double, Double, ILinearSystem_Eqn, Double, Double, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolidThermalStress2D_NonStatic_NewmarkBeta(Double, Double, Double, CLinearSystem_Field, Double, Double, Double, Double, Double, Double, CFieldWorld, UInt32, UInt32, Boolean(HasFieldMarshal), UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolidThermalStress2D_NonStatic_NewmarkBeta(Double, Double, Double, CLinearSystem_Field, Double, Double, Double, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid2D_Static_SaveStiffMat(CLinearSystem_Save, Double, Double, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid2D_Static_SaveStiffMat(CLinearSystem_Save, Double, Double, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid2D_NonStatic_Save_NewmarkBeta(CLinearSystem_SaveDiaM_NewmarkBeta, Double, Double, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid2D_NonStatic_Save_NewmarkBeta(CLinearSystem_SaveDiaM_NewmarkBeta, Double, Double, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid2D_Eigen(CLinearSystem_Eigen, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid2D_Eigen(CLinearSystem_Eigen, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetFem.Eqn.CEqnLinearSolid3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddLinSys_LinearSolid3D_Static(CLinearSystem_Field, Double, Double, Double, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid3D_NonStatic_NewmarkBeta(Double, Double, Double, ILinearSystem_Eqn, Double, Double, Double, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid3D_Static_SaveStiffMat(CLinearSystem_Save, Double, Double, Double, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_LinearSolid3D_Eigen(CLinearSystem_Eigen, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetFem.Eqn.CEqnNavierStokes: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddLinSys_NavierStokes2D_NonStatic_Newmark(Double, Double, CLinearSystem_Field, Double, Double, Double, Double, UInt32, UInt32, CFieldWorld, UInt32): PrivateScope, Public, HideBySig
    AddLinSys_NavierStokes2D_NonStatic_Newmark(Double, Double, CLinearSystem_Field, Double, Double, Double, Double, UInt32, UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    AddLinSys_NavierStokesALE2D_NonStatic_Newmark(Double, Double, CLinearSystem_Field, Double, Double, Double, Double, UInt32, UInt32, UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    AddLinSys_NavierStokes2DThermalBuoy_NonStatic_Newmark(Double, Double, Double, Double, Double, Double, CLinearSystem_Field, UInt32, UInt32, UInt32, CFieldWorld): PrivateScope, Public, HideBySig
Class DelFEM4NetFem.Eqn.CEqnPoisson: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddLinSys_Poisson(CLinearSystem_Save, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_Poisson(CLinearSystem_Save, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_Poisson(CLinearSystem_Field, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_Poisson(CLinearSystem_Field, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinearSystem_Wave(CLinearSystem_Eigen, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetFem.Eqn.CEqnStokes: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddLinSys_Stokes2D_Static(Double, Double, Double, CLinearSystem_Field, UInt32, UInt32, CFieldWorld, UInt32): PrivateScope, Public, HideBySig
    AddLinSys_Stokes2D_Static(Double, Double, Double, CLinearSystem_Field, UInt32, UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    AddLinSys_Stokes2D_NonStatic_Newmark(Double, Double, Double, Double, Double, Double, CLinearSystem_Field, UInt32, UInt32, CFieldWorld, UInt32): PrivateScope, Public, HideBySig
    AddLinSys_Stokes2D_NonStatic_Newmark(Double, Double, Double, Double, Double, Double, CLinearSystem_Field, UInt32, UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    AddLinSys_Stokes3D_Static(Double, Double, Double, Double, Double, CLinearSystem_Field, UInt32, UInt32, CFieldWorld): PrivateScope, Public, HideBySig
Class DelFEM4NetFem.Eqn.CEqnStVenant: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddLinSys_StVenant2D_Static(ILinearSystem_Eqn, Double, Double, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_StVenant2D_Static(ILinearSystem_Eqn, Double, Double, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_StVenant2D_NonStatic_NewmarkBeta(Double, Double, Double, ILinearSystem_Eqn, Double, Double, Double, Double, Double, CFieldWorld, UInt32, Boolean(HasFieldMarshal), UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_StVenant2D_NonStatic_NewmarkBeta(Double, Double, Double, ILinearSystem_Eqn, Double, Double, Double, Double, Double, CFieldWorld, UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    AddLinSys_StVenant2D_NonStatic_BackwardEular(Double, ILinearSystem_Eqn, Double, Double, Double, Double, Double, CFieldWorld, UInt32, CVector_Blk, Boolean(HasFieldMarshal), UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_StVenant2D_NonStatic_BackwardEular(Double, ILinearSystem_Eqn, Double, Double, Double, Double, Double, CFieldWorld, UInt32, CVector_Blk, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    AddLinSys_StVenant3D_Static(ILinearSystem_Eqn, Double, Double, Double, Double, Double, Double, CFieldWorld, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_StVenant3D_Static(ILinearSystem_Eqn, Double, Double, Double, Double, Double, Double, CFieldWorld, UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_StVenant3D_NonStatic_NewmarkBeta(Double, Double, Double, ILinearSystem_Eqn, Double, Double, Double, Double, Double, Double, CFieldWorld, UInt32, Boolean(HasFieldMarshal), UInt32): PrivateScope, Public, Static, HideBySig
    AddLinSys_StVenant3D_NonStatic_NewmarkBeta(Double, Double, Double, ILinearSystem_Eqn, Double, Double, Double, Double, Double, Double, CFieldWorld, UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetFem.Eqn.CKerEMatBar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32[] NIntLineGauss : Public, Static, InitOnly
    Double[,,] LineGauss : Public, Static, InitOnly
Class DelFEM4NetFem.Eqn.CKerEMatHex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 VEC_DIM IsConst : Public, Static, HasDefault
    Int32 NODE_CNT IsConst : Public, Static, HasDefault
  Methods:
    ShapeFunc_Hex8(Double, Double, Double, Double[,], Double&(Out), Double[,]&(Out), Double[]&(Out)): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetFem.Eqn.CKerEMatQuad: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 VEC_DIM IsConst : Public, Static, HasDefault
    Int32 NODE_CNT IsConst : Public, Static, HasDefault
  Methods:
    ShapeFunc_Quad4(Double, Double, Double[,], Double&(Out), Double[,]&(Out), Double[]&(Out)): PrivateScope, Public, Static, HideBySig
    ShapeFunc_Quad5(Double, Double, Double[,], Double&(Out), Double[,]&(Out), Double[]&(Out), Double[]&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig
    ShapeFunc_Quad8(Double, Double, Double[,], Double&(Out), Double[,]&(Out), Double[,]&(Out), Double[]&(Out), Double[]&(Out)): PrivateScope, Public, Static, HideBySig
    ShapeFunc_Quad9(Double, Double, Double[,], Double&(Out), Double[,]&(Out), Double[,]&(Out), Double[]&(Out), Double[]&(Out), Double[]&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetFem.Eqn.CKerEMatTet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 VEC_DIM IsConst : Public, Static, HasDefault
    Int32 NODE_CNT IsConst : Public, Static, HasDefault
    UInt32[] NIntTetGauss : Public, Static, InitOnly
    Double[,,] TetGauss : Public, Static, InitOnly
  Methods:
    TetVolume(Double[], Double[], Double[], Double[]): PrivateScope, Public, Static, HideBySig
    TetDlDx(Double[,](Out), Double[](Out), Double[], Double[], Double[], Double[]): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetFem.Eqn.CKerEMatTri: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 VEC_DIM IsConst : Public, Static, HasDefault
    Int32 NODE_CNT IsConst : Public, Static, HasDefault
    UInt32[] NIntTriGauss : Public, Static, InitOnly
    Double[,,] TriGauss : Public, Static, InitOnly
  Methods:
    TriArea(Double[], Double[], Double[]): PrivateScope, Public, Static, HideBySig
    TriAreaCoord(Double[]&(Out), Double[], Double[], Double[], Double[]): PrivateScope, Public, Static, HideBySig
    TriDlDx(Double[,]&(Out), Double[]&(Out), Double[], Double[], Double[]): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetFem.Field.View.CColorMap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Fem.Field.View.CColorMap*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Field.View.CColorMap): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Field.View.CColorMap* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetColor(Single[]&(Out), Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsMinMaxFix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMinMax(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMax(): PrivateScope, Public, HideBySig
    GetMin(): PrivateScope, Public, HideBySig
    DrawColorLegend(CColorMap): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.View.CIndexArrayElem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt32, UInt32, DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Single[] color 'get set' : 
    Int32 ilayer 'get set' : 
    Fem.Field.View.CIndexArrayElem* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    DrawElements(): PrivateScope, Public, HideBySig
    GetElemDim(): PrivateScope, Public, HideBySig
    GetIdEA(): PrivateScope, Public, HideBySig
    SetColor(UInt32, UInt32, CFieldWorld, CColorMap): PrivateScope, Public, HideBySig
    SetColor(Double, Double, Double): PrivateScope, Public, HideBySig
    GetSize(): PrivateScope, Public, HideBySig
    GetNNoel(): PrivateScope, Public, HideBySig
    GetNoes(UInt32, UInt32[]&(Out)): PrivateScope, Public, HideBySig
    GetElemType(): PrivateScope, Public, HideBySig
    get_ilayer(): PrivateScope, Public, HideBySig, SpecialName
    set_ilayer(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_color(): PrivateScope, Public, HideBySig, SpecialName
    set_color(Single[]): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.View.CIndexVertex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Fem.Field.View.CIndexVertex*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Field.View.CIndexVertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean is_selected 'get set' : 
    UInt32 id_es 'get set' : 
    UInt32 id_ea 'get set' : 
    UInt32 id_v 'get set' : 
    Fem.Field.View.CIndexVertex* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id_v(): PrivateScope, Public, HideBySig, SpecialName
    set_id_v(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_ea(): PrivateScope, Public, HideBySig, SpecialName
    set_id_ea(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_es(): PrivateScope, Public, HideBySig, SpecialName
    set_id_es(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_is_selected(): PrivateScope, Public, HideBySig, SpecialName
    set_is_selected(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.View.CDrawerField: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DelFEM4NetCom.View.CDrawer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Update(CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DelFEM4NetFem.Field.View.CDrawerArrayField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.View.CDrawerArray
    Void .ctor(Fem.Field.View.CDrawerArrayField*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Field.View.CDrawerArrayField): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Field.View.CDrawerArrayField* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Update(CFieldWorld): PrivateScope, Public, HideBySig
    PushBack(CDrawer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DelFEM4NetFem.Field.View.CDrawerEdge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Field.View.CDrawerField
    Void .ctor(UInt32, Boolean, DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Field.View.CDrawerEdge* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
    Draw(): PrivateScope, Public, Virtual, HideBySig
    Update(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    SetLineWidth(UInt32): PrivateScope, Public, HideBySig
Class DelFEM4NetFem.Field.View.CDrawerFace: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Field.View.CDrawerField
    Void .ctor(UInt32, Boolean, DelFEM4NetFem.Field.CFieldWorld, UInt32, DelFEM4NetFem.Field.View.CColorMap): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, Boolean, DelFEM4NetFem.Field.CFieldWorld, UInt32, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, Boolean, DelFEM4NetFem.Field.CFieldWorld, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, Boolean, DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Field.View.CDrawerFace* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Draw(): PrivateScope, Public, Virtual, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
    Update(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    SetColor(Double, Double, Double, UInt32): PrivateScope, Public, HideBySig
    SetColor(Double, Double, Double): PrivateScope, Public, HideBySig
    EnableNormal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    EnableUVMap(Boolean(HasFieldMarshal), CFieldWorld): PrivateScope, Public, HideBySig
    SetTexCenter(Double, Double): PrivateScope, Public, HideBySig
    GetTexCenter(Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    SetTexScale(Double, CFieldWorld): PrivateScope, Public, HideBySig
Class DelFEM4NetFem.Field.View.CEdgeTextureColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Fem.Field.View.CEdgeTextureColor*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32, DelFEM4NetFem.Field.CFieldWorld, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Field.View.CEdgeTextureColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Fem.Field.View.CEdgeTextureColor* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Set(UInt32, UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    Update(CFieldWorld): PrivateScope, Public, HideBySig
    Draw(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Field.View.CDrawerImageBasedFlowVis: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Field.View.CDrawerField
    Void .ctor(UInt32, DelFEM4NetFem.Field.CFieldWorld, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[DelFEM4NetFem.Field.View.CEdgeTextureColor] aEdgeColor 'get set' : 
    Fem.Field.View.CDrawerImageBasedFlowVis* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
    Draw(): PrivateScope, Public, Virtual, HideBySig
    Update(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    AddFlowInOutEdgeColor(UInt32, CFieldWorld, Double, Double, Double): PrivateScope, Public, HideBySig
    SetColorField(UInt32, CFieldWorld, CColorMap): PrivateScope, Public, HideBySig
    get_aEdgeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_aEdgeColor(IList`1): PrivateScope, Public, HideBySig, SpecialName
Class DelFEM4NetFem.Field.View.CDrawerStreamline: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Field.View.CDrawerField
    Void .ctor(UInt32, DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Field.View.CDrawerStreamline* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    MakeStreamLine(UInt32, CFieldWorld, IList`1): PrivateScope, Public, Static, HideBySig
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Update(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    Draw(): PrivateScope, Public, Virtual, HideBySig
Class DelFEM4NetFem.Field.View.CDrawerVector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetFem.Field.View.CDrawerField
    Void .ctor(Fem.Field.View.CDrawerVector*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, DelFEM4NetFem.Field.CFieldWorld): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Field.View.CDrawerVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Fem.Field.View.CDrawerVector* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
    Draw(): PrivateScope, Public, Virtual, HideBySig
    Update(CFieldWorld): PrivateScope, Public, Virtual, HideBySig
Interface DelFEM4NetFem.Ls.CZPreconditioner: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    Fem.Ls.CZPreconditioner* PrecondSelf 'get ' : 
  Methods:
    get_PrecondSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    SetLinearSystem(CZLinearSystem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetValue(CZLinearSystem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SolvePrecond(CZLinearSystem, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DelFEM4NetFem.Ls.CZPreconditioner_ILU: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetFem.Ls.CZLinearSystem, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetFem.Ls.CZLinearSystem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetFem.Ls.CZPreconditioner
    System.IDisposable
  Properties:
    Fem.Ls.CZPreconditioner* PrecondSelf 'get ' : 
    Fem.Ls.CZPreconditioner_ILU* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_PrecondSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    SetFillInLevel(UInt32): PrivateScope, Public, HideBySig
    SetLinearSystem(CZLinearSystem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetValue(CZLinearSystem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SolvePrecond(CZLinearSystem, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetFem.Ls.CZSolverLsIter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Solve_CG(Double&, UInt32&, CZLinearSystem): PrivateScope, Public, Static, HideBySig
    Solve_PCG(Double&, UInt32&, CZLinearSystem, CZPreconditioner): PrivateScope, Public, Static, HideBySig
    Solve_PCOCG(Double&, UInt32&, CZLinearSystem, CZPreconditioner): PrivateScope, Public, Static, HideBySig
    Solve_CGNR(Double&, UInt32&, CZLinearSystem): PrivateScope, Public, Static, HideBySig
    Solve_BiCGSTAB(Double&, UInt32&, CZLinearSystem): PrivateScope, Public, Static, HideBySig
    Solve_BiCGStabP(Double&, UInt32&, CZLinearSystem, CZPreconditioner): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetLsSol.CEigenLanczos: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    MinimumEigenValueVector_InvPower(CLinearSystem, CPreconditioner, IList`1, UInt32, UInt32, Double, Int32&(Out)): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetMatVec.KerMat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CalcInvMat3(Double[,], Double[,]&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig
    CalcInvMat(Double[]&, UInt32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
Class DelFEM4NetMsh.CPoint3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.CPoint3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CPoint3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 old_p 'get set' : 
    UInt32 poel 'get set' : 
    Int32 e    'get set' : 
    DelFEM4NetCom.CVector3D p 'get set' : 
    Msh.CPoint3D* Self 'get ' : 
  Methods:
    op_LessThan(CPoint3D): PrivateScope, Public, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_p(): PrivateScope, Public, HideBySig, SpecialName
    set_p(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_e(): PrivateScope, Public, HideBySig, SpecialName
    set_e(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_poel(): PrivateScope, Public, HideBySig, SpecialName
    set_poel(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_old_p(): PrivateScope, Public, HideBySig, SpecialName
    set_old_p(Int32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.STet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.STet*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.STet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 C_V_CNT : Public, Static
    Int32 C_S_CNT : Public, Static
  Properties:
    Int32 old_t 'get set' : 
    UInt32[] f 'get set' : 
    Int32[] g  'get set' : 
    UInt32[] s 'get set' : 
    UInt32[] v 'get set' : 
    Msh.STet* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_v(): PrivateScope, Public, HideBySig, SpecialName
    set_v(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_s(): PrivateScope, Public, HideBySig, SpecialName
    set_s(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_g(): PrivateScope, Public, HideBySig, SpecialName
    set_g(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_f(): PrivateScope, Public, HideBySig, SpecialName
    set_f(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_old_t(): PrivateScope, Public, HideBySig, SpecialName
    set_old_t(Int32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.SHex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.SHex*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.SHex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 C_V_CNT : Public, Static
    Int32 C_S_CNT : Public, Static
  Properties:
    Int32 old_h 'get set' : 
    UInt32[] f 'get set' : 
    Int32[] g  'get set' : 
    UInt32[] s 'get set' : 
    UInt32[] v 'get set' : 
    Msh.SHex* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_v(): PrivateScope, Public, HideBySig, SpecialName
    set_v(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_s(): PrivateScope, Public, HideBySig, SpecialName
    set_s(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_g(): PrivateScope, Public, HideBySig, SpecialName
    set_g(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_f(): PrivateScope, Public, HideBySig, SpecialName
    set_f(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_old_h(): PrivateScope, Public, HideBySig, SpecialName
    set_old_h(Int32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.STri3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.STri3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.STri3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 C_V_CNT : Public, Static
    Int32 C_S_CNT : Public, Static
    Int32 C_F_CNT : Public, Static
  Properties:
    UInt32[] df 'get set' : 
    Int32[] gf 'get set' : 
    Int32[] sf 'get set' : 
    UInt32[] r2 'get set' : 
    Int32[] g2 'get set' : 
    UInt32[] s2 'get set' : 
    UInt32[] v 'get set' : 
    Msh.STri3D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_v(): PrivateScope, Public, HideBySig, SpecialName
    set_v(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_s2(): PrivateScope, Public, HideBySig, SpecialName
    set_s2(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_g2(): PrivateScope, Public, HideBySig, SpecialName
    set_g2(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_r2(): PrivateScope, Public, HideBySig, SpecialName
    set_r2(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_sf(): PrivateScope, Public, HideBySig, SpecialName
    set_sf(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_gf(): PrivateScope, Public, HideBySig, SpecialName
    set_gf(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_df(): PrivateScope, Public, HideBySig, SpecialName
    set_df(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.SQuad3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.SQuad3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.SQuad3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 C_V_CNT : Public, Static
    Int32 C_S_CNT : Public, Static
    Int32 C_F_CNT : Public, Static
  Properties:
    UInt32[] df 'get set' : 
    Int32[] gf 'get set' : 
    Int32[] sf 'get set' : 
    UInt32[] de 'get set' : 
    Int32[] ge 'get set' : 
    Int32[] se 'get set' : 
    UInt32[] v 'get set' : 
    Msh.SQuad3D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_v(): PrivateScope, Public, HideBySig, SpecialName
    set_v(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_se(): PrivateScope, Public, HideBySig, SpecialName
    set_se(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_ge(): PrivateScope, Public, HideBySig, SpecialName
    set_ge(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_de(): PrivateScope, Public, HideBySig, SpecialName
    set_de(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    get_sf(): PrivateScope, Public, HideBySig, SpecialName
    set_sf(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_gf(): PrivateScope, Public, HideBySig, SpecialName
    set_gf(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_df(): PrivateScope, Public, HideBySig, SpecialName
    set_df(UInt32[]): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.SVertex3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.SVertex3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.SVertex3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    UInt32 v   'get set' : 
    UInt32 inum_extrude 'get set' : 
    UInt32 id_msh_before_extrude 'get set' : 
    UInt32 id_cad 'get set' : 
    UInt32 id  'get set' : 
    Msh.SVertex3D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_cad(): PrivateScope, Public, HideBySig, SpecialName
    set_id_cad(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_msh_before_extrude(): PrivateScope, Public, HideBySig, SpecialName
    set_id_msh_before_extrude(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_inum_extrude(): PrivateScope, Public, HideBySig, SpecialName
    set_inum_extrude(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_v(): PrivateScope, Public, HideBySig, SpecialName
    set_v(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.CBarAry3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.CBarAry3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CBarAry3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.Generic.IList`1[DelFEM4NetMsh.SBar] m_aBar 'get set' : 
    UInt32 inum_extrude 'get set' : 
    UInt32 id_msh_before_extrude 'get set' : 
    UInt32 id_cad 'get set' : 
    UInt32 id  'get set' : 
    Msh.CBarAry3D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_cad(): PrivateScope, Public, HideBySig, SpecialName
    set_id_cad(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_msh_before_extrude(): PrivateScope, Public, HideBySig, SpecialName
    set_id_msh_before_extrude(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_inum_extrude(): PrivateScope, Public, HideBySig, SpecialName
    set_inum_extrude(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_m_aBar(): PrivateScope, Public, HideBySig, SpecialName
    set_m_aBar(IList`1): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.CTetAry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.CTetAry*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CTetAry): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.Generic.IList`1[DelFEM4NetMsh.STet] m_aTet 'get set' : 
    UInt32 inum_extrude 'get set' : 
    UInt32 id_msh_before_extrude 'get set' : 
    UInt32 id_cad 'get set' : 
    UInt32 id  'get set' : 
    Msh.CTetAry* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_cad(): PrivateScope, Public, HideBySig, SpecialName
    set_id_cad(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_msh_before_extrude(): PrivateScope, Public, HideBySig, SpecialName
    set_id_msh_before_extrude(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_inum_extrude(): PrivateScope, Public, HideBySig, SpecialName
    set_inum_extrude(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_m_aTet(): PrivateScope, Public, HideBySig, SpecialName
    set_m_aTet(IList`1): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.CHexAry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.CHexAry*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CHexAry): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.Generic.IList`1[DelFEM4NetMsh.SHex] m_aHex 'get set' : 
    UInt32 inum_extrude 'get set' : 
    UInt32 id_msh_before_extrude 'get set' : 
    UInt32 id_cad 'get set' : 
    UInt32 id  'get set' : 
    Msh.CHexAry* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_cad(): PrivateScope, Public, HideBySig, SpecialName
    set_id_cad(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_msh_before_extrude(): PrivateScope, Public, HideBySig, SpecialName
    set_id_msh_before_extrude(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_inum_extrude(): PrivateScope, Public, HideBySig, SpecialName
    set_inum_extrude(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_m_aHex(): PrivateScope, Public, HideBySig, SpecialName
    set_m_aHex(IList`1): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.CTriAry3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.CTriAry3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CTriAry3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.Generic.IList`1[DelFEM4NetMsh.STri3D] m_aTri 'get set' : 
    UInt32 inum_extrude 'get set' : 
    UInt32 id_msh_before_extrude 'get set' : 
    UInt32 id_cad 'get set' : 
    UInt32 id  'get set' : 
    Msh.CTriAry3D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_cad(): PrivateScope, Public, HideBySig, SpecialName
    set_id_cad(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_msh_before_extrude(): PrivateScope, Public, HideBySig, SpecialName
    set_id_msh_before_extrude(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_inum_extrude(): PrivateScope, Public, HideBySig, SpecialName
    set_inum_extrude(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_m_aTri(): PrivateScope, Public, HideBySig, SpecialName
    set_m_aTri(IList`1): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.CQuadAry3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.CQuadAry3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CQuadAry3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.Generic.IList`1[DelFEM4NetMsh.SQuad3D] m_aQuad 'get set' : 
    UInt32 inum_extrude 'get set' : 
    UInt32 id_msh_before_extrude 'get set' : 
    UInt32 id_cad 'get set' : 
    UInt32 id  'get set' : 
    Msh.CQuadAry3D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    get_id(): PrivateScope, Public, HideBySig, SpecialName
    set_id(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_cad(): PrivateScope, Public, HideBySig, SpecialName
    set_id_cad(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_id_msh_before_extrude(): PrivateScope, Public, HideBySig, SpecialName
    set_id_msh_before_extrude(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_inum_extrude(): PrivateScope, Public, HideBySig, SpecialName
    set_inum_extrude(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_m_aQuad(): PrivateScope, Public, HideBySig, SpecialName
    set_m_aQuad(IList`1): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.CMesh3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Msh.CMesh3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CMesh3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetMsh.IMesh
    System.IDisposable
  Properties:
    Msh.CMesh3D* Self 'get ' : 
    Msh.IMesh* MshSelf 'get ' : 
  Methods:
    get_MshSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetDimention(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCoord(IList`1&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetInfo(UInt32, UInt32&(Out), UInt32&(Out), UInt32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetConnectivity(UInt32, IList`1&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAry_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIncludeElemIDAry(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Scale(Double): PrivateScope, Public, HideBySig
    Translate(Double, Double, Double): PrivateScope, Public, HideBySig
    Rotate(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    IsID(UInt32): PrivateScope, Public, HideBySig
    GetTetArySet(): PrivateScope, Public, HideBySig
    GetHexArySet(): PrivateScope, Public, HideBySig
    GetTriArySet(): PrivateScope, Public, HideBySig
    GetQuadArySet(): PrivateScope, Public, HideBySig
    GetBarArySet(): PrivateScope, Public, HideBySig
    GetVertexAry(): PrivateScope, Public, HideBySig
    GetVectorAry(): PrivateScope, Public, HideBySig
    Serialize(CSerializer): PrivateScope, Public, HideBySig
    ReadFromFile_GiDMsh(String): PrivateScope, Public, HideBySig
    ReadFromFile_TetgenMsh(String): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetMsh.CMesh3D_Extrude: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetMsh.CMesh3D
    Void .ctor(Msh.CMesh3D_Extrude*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CMesh3D_Extrude): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    UpdateMeshCoord(CMesher2D): PrivateScope, Public, HideBySig
    UpdateMeshConnectivity(CMesher2D): PrivateScope, Public, HideBySig
    Extrude(CMesher2D, Double, Double): PrivateScope, Public, HideBySig
Class DelFEM4NetMsh.CMesher3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetMsh.CMesh3D
    Void .ctor(Msh.CMesher3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CMesher3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    ReadFile_PLY(String): PrivateScope, Public, HideBySig
    CutMesh(Double): PrivateScope, Public, HideBySig
    HomogenizeSurface(Double): PrivateScope, Public, HideBySig
Class DelFEM4NetMsh.View.CDrawerMsh2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.View.CDrawer
    Void .ctor(DelFEM4NetMsh.CMesher2D, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CMesher2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Msh.View.CDrawerMsh2D* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Draw(): PrivateScope, Public, Virtual, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    SetLineWidth(UInt32): PrivateScope, Public, HideBySig
    UpdateCoord(CMesher2D): PrivateScope, Public, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
    GetMshPartID(Int32[], UInt32&(Out)): PrivateScope, Public, HideBySig
Class DelFEM4NetMsh.View.CDrawerMsh3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetCom.View.CDrawer
    Void .ctor(Msh.View.CDrawerMsh3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.CMesh3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetMsh.View.CDrawerMsh3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Msh.View.CDrawerMsh3D* Self 'get ' : 
    Com.View.CDrawer* DrawerSelf 'get ' : 
  Methods:
    get_DrawerSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Draw(): PrivateScope, Public, Virtual, HideBySig
    DrawSelection(UInt32): PrivateScope, Public, Virtual, HideBySig
    GetBoundingBox(Double[]): PrivateScope, Public, Virtual, HideBySig
    AddSelected(Int32[]): PrivateScope, Public, Virtual, HideBySig
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig
    Hide(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColor(UInt32, Double, Double, Double): PrivateScope, Public, HideBySig
Interface DelFEM4NetLs.ILinearSystem_RigidBody: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    Ls.CLinearSystem_RigidBody* LsSelf 'get ' : 
  Methods:
    get_LsSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetSizeRigidBody(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddResidual(UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, Double[], Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddResidual(UInt32, Boolean(HasFieldMarshal), UInt32, CVector3D, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SubResidual(UInt32, Boolean(HasFieldMarshal), Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddMatrix(UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, Double[], Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddMatrix(UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, Boolean(HasFieldMarshal), UInt32, CMatrix3, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddMatrix_Vector(UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, Boolean(HasFieldMarshal), UInt32, CVector3D, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UpdateValueOfRigidSystem(IList`1&, IList`1&, Double, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DelFEM4NetLs.CLinearSystem_RigidBody_CRS2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Generic.IList`1[DelFEM4NetRigid.CRigidBody3D], System.Collections.Generic.IList`1[DelFEM4NetRigid.CConstraint]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Ls.CLinearSystem_RigidBody_CRS2*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetLs.ILinearSystem_RigidBody
    DelFEM4NetLsSol.ILinearSystem_Sol
    System.IDisposable
  Properties:
    Ls.CLinearSystem_RigidBody_CRS2* Self 'get ' : 
    LsSol.ILinearSystem_Sol* SolSelf 'get ' : 
    Ls.CLinearSystem_RigidBody* LsSelf 'get ' : 
  Methods:
    get_LsSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SolSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    SetRigidSystem(IList`1, IList`1): PrivateScope, Public, HideBySig
    GetSizeRigidBody(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddResidual(UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, Double[], Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddResidual(UInt32, Boolean(HasFieldMarshal), UInt32, CVector3D, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SubResidual(UInt32, Boolean(HasFieldMarshal), Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMatrix(UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, Double[], Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMatrix(UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, Boolean(HasFieldMarshal), UInt32, CMatrix3, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMatrix_Vector(UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, Boolean(HasFieldMarshal), UInt32, CVector3D, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitializeMarge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FinalizeMarge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTmpVectorArySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReSizeTmpVecSolver(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DOT(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    COPY(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCAL(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AXPY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MATVEC(Double, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetVectorPtr(Int32): PrivateScope, Public, HideBySig
    GetVector(Int32): PrivateScope, Public, HideBySig
    GetMatrix(): PrivateScope, Public, HideBySig
    UpdateValueOfRigidSystem(IList`1&, IList`1&, Double, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetLs.CPreconditioner_RigidBody_CRS2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Ls.CPreconditioner_RigidBody_CRS2*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Ls.CPreconditioner_RigidBody_CRS2* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetLinearSystem(CLinearSystem_RigidBody_CRS2, Int32): PrivateScope, Public, HideBySig
    SetLinearSystem(CLinearSystem_RigidBody_CRS2): PrivateScope, Public, HideBySig
    SetValue(CLinearSystem_RigidBody_CRS2): PrivateScope, Public, HideBySig
    Solve(CVector_Blk&): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetLs.CLinearSystemPreconditioner_RigidBody_CRS2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetLs.CLinearSystem_RigidBody_CRS2, DelFEM4NetLs.CPreconditioner_RigidBody_CRS2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetLsSol.ILinearSystemPreconditioner_Sol
    System.IDisposable
  Properties:
    Ls.CLinearSystemPreconditioner_RigidBody_CRS2* Self 'get ' : 
    LsSol.ILinearSystemPreconditioner_Sol* SolSelf 'get ' : 
  Methods:
    get_SolSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Self(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetTmpVectorArySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReSizeTmpVecSolver(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DOT(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    COPY(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCAL(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AXPY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MATVEC(Double, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SolvePrecond(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetRigid.CRigidBody3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Rigid.CRigidBody3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetRigid.CRigidBody3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DelFEM4NetCom.DoubleArrayIndexer mineatia 'get ' : 
    Double mass 'get set' : 
    DelFEM4NetCom.CVector3D ini_pos_cg 'get set' : 
    DelFEM4NetCom.CVector3D acc_cg 'get set' : 
    DelFEM4NetCom.CVector3D disp_cg 'get set' : 
    DelFEM4NetCom.CVector3D velo_cg 'get set' : 
    DelFEM4NetCom.CVector3D dOmega 'get set' : 
    DelFEM4NetCom.CVector3D Omega 'get set' : 
    DelFEM4NetCom.DoubleArrayIndexer crv 'get ' : 
    Rigid.CRigidBody3D* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetDOF(): PrivateScope, Public, HideBySig
    GetInvRotMatrix44(Double[]&): PrivateScope, Public, HideBySig
    GetRotMatrix33(Double[]&): PrivateScope, Public, HideBySig
    GetRotMatrix(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    GetPositionFromInital(CVector3D): PrivateScope, Public, HideBySig
    AddRotation(Double[]): PrivateScope, Public, HideBySig
    UpdateSolution(Double[], Double, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, CVector3D, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Set_Omega_Vector(Double, Double, Double): PrivateScope, Public, HideBySig
    Set_dOmega_Vector(Double, Double, Double): PrivateScope, Public, HideBySig
    Set_velo_cg_Vector(Double, Double, Double): PrivateScope, Public, HideBySig
    Set_disp_cg_Vector(Double, Double, Double): PrivateScope, Public, HideBySig
    Set_acc_cg_Vector(Double, Double, Double): PrivateScope, Public, HideBySig
    Set_ini_pos_cg_Vector(Double, Double, Double): PrivateScope, Public, HideBySig
    get_crv(): PrivateScope, Public, HideBySig, SpecialName
    get_Omega(): PrivateScope, Public, HideBySig, SpecialName
    set_Omega(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_dOmega(): PrivateScope, Public, HideBySig, SpecialName
    set_dOmega(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_velo_cg(): PrivateScope, Public, HideBySig, SpecialName
    set_velo_cg(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_disp_cg(): PrivateScope, Public, HideBySig, SpecialName
    set_disp_cg(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_acc_cg(): PrivateScope, Public, HideBySig, SpecialName
    set_acc_cg(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_ini_pos_cg(): PrivateScope, Public, HideBySig, SpecialName
    set_ini_pos_cg(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_mass(): PrivateScope, Public, HideBySig, SpecialName
    set_mass(Double): PrivateScope, Public, HideBySig, SpecialName
    get_mineatia(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetRigid.CConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DelFEM4NetCom.UIntVectorIndexer aIndRB 'get ' : 
    Rigid.CConstraint* ConstraintSelf 'get ' : 
  Methods:
    get_ConstraintSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetDOF(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UpdateSolution(Double[], Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAry_IndexRB(): PrivateScope, Public, HideBySig
    get_aIndRB(): PrivateScope, Public, HideBySig, SpecialName
    ListToInstancePtrVector_NoCreate<DelFEM4NetRigid::CConstraint,Rigid::CConstraint>(IList`1, vector<Rigid::CConstraint \*\,std::allocator<Rigid::CConstraint \*> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ListToInstancePtrVector_NoCreate<DelFEM4NetRigid::CConstraint,Rigid::CConstraint>(vector<Rigid::CConstraint \*\,std::allocator<Rigid::CConstraint \*> >*, IList`1): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetRigid.CFix_Spherical: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetRigid.CConstraint
    Void .ctor(Rigid.CFix_Spherical*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetRigid.CFix_Spherical): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DelFEM4NetCom.CVector3D ini_pos_fix 'get set' : 
    DelFEM4NetCom.DoubleArrayIndexer lambda 'get ' : 
    Rigid.CFix_Spherical* Self 'get ' : 
    Rigid.CConstraint* ConstraintSelf 'get ' : 
  Methods:
    get_ConstraintSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetDOF(): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
    SetIniPosFix(Double, Double, Double): PrivateScope, Public, HideBySig
    UpdateSolution(Double[], Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1): PrivateScope, Public, HideBySig
    get_lambda(): PrivateScope, Public, HideBySig, SpecialName
    get_ini_pos_fix(): PrivateScope, Public, HideBySig, SpecialName
    set_ini_pos_fix(CVector3D): PrivateScope, Public, HideBySig, SpecialName
Class DelFEM4NetRigid.CFix_Hinge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetRigid.CConstraint
    Void .ctor(Rigid.CFix_Hinge*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetRigid.CFix_Hinge): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DelFEM4NetCom.CVector3DArrayIndexer loc_coord 'get ' : 
    DelFEM4NetCom.CVector3D ini_pos_fix 'get set' : 
    DelFEM4NetCom.DoubleArrayIndexer lambda 'get ' : 
    Rigid.CFix_Hinge* Self 'get ' : 
    Rigid.CConstraint* ConstraintSelf 'get ' : 
  Methods:
    get_ConstraintSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetDOF(): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
    SetIniPosFix(Double, Double, Double): PrivateScope, Public, HideBySig
    SetAxis(Double, Double, Double): PrivateScope, Public, HideBySig
    UpdateSolution(Double[], Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1): PrivateScope, Public, HideBySig
    get_lambda(): PrivateScope, Public, HideBySig, SpecialName
    get_ini_pos_fix(): PrivateScope, Public, HideBySig, SpecialName
    set_ini_pos_fix(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_loc_coord(): PrivateScope, Public, HideBySig, SpecialName
Class DelFEM4NetRigid.CFix_HingeRange: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetRigid.CConstraint
    Void .ctor(Rigid.CFix_HingeRange*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetRigid.CFix_HingeRange): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double max_t 'get set' : 
    Double min_t 'get set' : 
    DelFEM4NetCom.CVector3DArrayIndexer loc_coord 'get ' : 
    DelFEM4NetCom.CVector3D ini_pos_fix 'get set' : 
    DelFEM4NetCom.DoubleArrayIndexer lambda 'get ' : 
    Rigid.CFix_HingeRange* Self 'get ' : 
    Rigid.CConstraint* ConstraintSelf 'get ' : 
  Methods:
    get_ConstraintSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetDOF(): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
    SetIniPosFix(Double, Double, Double): PrivateScope, Public, HideBySig
    SetAxis(Double, Double, Double): PrivateScope, Public, HideBySig
    SetRange(Double, Double): PrivateScope, Public, HideBySig
    UpdateSolution(Double[], Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1): PrivateScope, Public, HideBySig
    get_lambda(): PrivateScope, Public, HideBySig, SpecialName
    get_ini_pos_fix(): PrivateScope, Public, HideBySig, SpecialName
    set_ini_pos_fix(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_loc_coord(): PrivateScope, Public, HideBySig, SpecialName
    get_min_t(): PrivateScope, Public, HideBySig, SpecialName
    set_min_t(Double): PrivateScope, Public, HideBySig, SpecialName
    get_max_t(): PrivateScope, Public, HideBySig, SpecialName
    set_max_t(Double): PrivateScope, Public, HideBySig, SpecialName
Class DelFEM4NetRigid.CJoint_Spherical: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetRigid.CConstraint
    Void .ctor(Rigid.CJoint_Spherical*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetRigid.CJoint_Spherical): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DelFEM4NetCom.CVector3D ini_pos_joint 'get set' : 
    DelFEM4NetCom.DoubleArrayIndexer lambda 'get ' : 
    Rigid.CJoint_Spherical* Self 'get ' : 
    Rigid.CConstraint* ConstraintSelf 'get ' : 
  Methods:
    get_ConstraintSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetDOF(): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
    SetIniPosJoint(Double, Double, Double): PrivateScope, Public, HideBySig
    UpdateSolution(Double[], Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1): PrivateScope, Public, HideBySig
    get_lambda(): PrivateScope, Public, HideBySig, SpecialName
    get_ini_pos_joint(): PrivateScope, Public, HideBySig, SpecialName
    set_ini_pos_joint(CVector3D): PrivateScope, Public, HideBySig, SpecialName
Class DelFEM4NetRigid.CJoint_Hinge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetRigid.CConstraint
    Void .ctor(Rigid.CJoint_Hinge*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetRigid.CJoint_Hinge): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DelFEM4NetCom.CVector3DArrayIndexer loc_coord 'get ' : 
    DelFEM4NetCom.CVector3D ini_pos_joint 'get set' : 
    DelFEM4NetCom.DoubleArrayIndexer lambda 'get ' : 
    Rigid.CJoint_Hinge* Self 'get ' : 
    Rigid.CConstraint* ConstraintSelf 'get ' : 
  Methods:
    get_ConstraintSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetDOF(): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
    SetIniPosJoint(Double, Double, Double): PrivateScope, Public, HideBySig
    SetAxis(Double, Double, Double): PrivateScope, Public, HideBySig
    UpdateSolution(Double[], Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1): PrivateScope, Public, HideBySig
    get_lambda(): PrivateScope, Public, HideBySig, SpecialName
    get_ini_pos_joint(): PrivateScope, Public, HideBySig, SpecialName
    set_ini_pos_joint(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_loc_coord(): PrivateScope, Public, HideBySig, SpecialName
Class DelFEM4NetRigid.CJoint_HingeRange: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DelFEM4NetRigid.CConstraint
    Void .ctor(Rigid.CJoint_HingeRange*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DelFEM4NetRigid.CJoint_HingeRange): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double max_t 'get set' : 
    Double min_t 'get set' : 
    DelFEM4NetCom.CVector3DArrayIndexer loc_coord 'get ' : 
    DelFEM4NetCom.CVector3D ini_pos_joint 'get set' : 
    DelFEM4NetCom.DoubleArrayIndexer lambda 'get ' : 
    Rigid.CJoint_HingeRange* Self 'get ' : 
    Rigid.CConstraint* ConstraintSelf 'get ' : 
  Methods:
    get_ConstraintSelf(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetDOF(): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
    SetIniPosJoint(Double, Double, Double): PrivateScope, Public, HideBySig
    SetAxis(Double, Double, Double): PrivateScope, Public, HideBySig
    SetRange(Double, Double): PrivateScope, Public, HideBySig
    UpdateSolution(Double[], Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig
    AddLinearSystem(ILinearSystem_RigidBody&, UInt32, Double, Double, Double, IList`1): PrivateScope, Public, HideBySig
    get_lambda(): PrivateScope, Public, HideBySig, SpecialName
    get_ini_pos_joint(): PrivateScope, Public, HideBySig, SpecialName
    set_ini_pos_joint(CVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_loc_coord(): PrivateScope, Public, HideBySig, SpecialName
    get_min_t(): PrivateScope, Public, HideBySig, SpecialName
    set_min_t(Double): PrivateScope, Public, HideBySig, SpecialName
    get_max_t(): PrivateScope, Public, HideBySig, SpecialName
    set_max_t(Double): PrivateScope, Public, HideBySig, SpecialName
Class DelFEM4NetLs.CLinearSystem_RigidField2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Ls.CLinearSystem_RigidField2*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetLs.ILinearSystem_RigidBody
    DelFEM4NetFem.Eqn.ILinearSystem_Eqn
    DelFEM4NetLsSol.ILinearSystem_Sol
    System.IDisposable
  Properties:
    Ls.CLinearSystem_RigidField2* Self 'get ' : 
    LsSol.ILinearSystem_Sol* SolSelf 'get ' : 
    Fem.Eqn.ILinearSystem_Eqn* EqnSelf 'get ' : 
    Ls.CLinearSystem_RigidBody* LsSelf 'get ' : 
  Methods:
    get_LsSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EqnSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SolSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    FindIndexArray_Seg(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, HideBySig
    GetIndexSegRigid(): PrivateScope, Public, HideBySig
    AddPattern_Field(UInt32, UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    AddPattern_Field(UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    SetFixedBoundaryCondition_Field(UInt32, CFieldWorld): PrivateScope, Public, HideBySig
    UpdateValueOfField_NewmarkBeta(Double, Double, Double, UInt32, CFieldWorld, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetResidual(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMatrix(UInt32, ELSEG_TYPE, UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMatrix(UInt32, ELSEG_TYPE, CFieldWorld): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRigidSystem(IList`1, IList`1): PrivateScope, Public, HideBySig
    GetSizeRigidBody(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSizeConstraint(): PrivateScope, Public, HideBySig
    UpdateValueOfRigidSystem(IList`1&, IList`1&, Double, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddResidual(UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, Double[], Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddResidual(UInt32, Boolean(HasFieldMarshal), UInt32, CVector3D, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SubResidual(UInt32, Boolean(HasFieldMarshal), Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMatrix(UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, Double[], Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMatrix(UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, Boolean(HasFieldMarshal), UInt32, CMatrix3, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMatrix_Vector(UInt32, Boolean(HasFieldMarshal), UInt32, UInt32, Boolean(HasFieldMarshal), UInt32, CVector3D, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPattern_RigidField(UInt32, UInt32, CFieldWorld, UInt32, IList`1&, IList`1&): PrivateScope, Public, HideBySig
    GetMatrixPtr(UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMatrixPtr(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetResidualPtr(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNLinSysSeg(): PrivateScope, Public, HideBySig
    InitializeMarge(): PrivateScope, Public, HideBySig
    FinalizeMarge(): PrivateScope, Public, HideBySig
    GetTmpVectorArySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReSizeTmpVecSolver(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DOT(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    COPY(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCAL(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AXPY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MATVEC(Double, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLs(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetLs.CPreconditioner_RigidField2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Ls.CPreconditioner_RigidField2*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Ls.CPreconditioner_RigidField2* Self 'get ' : 
  Methods:
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    SetFillInLevel(Int32, Int32): PrivateScope, Public, HideBySig
    SetFillInLevel(Int32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    SetLinearSystem(CLinearSystem_RigidField2): PrivateScope, Public, HideBySig
    SetValue(CLinearSystem_RigidField2): PrivateScope, Public, HideBySig
    SolvePrecond(CLinearSystem_RigidField2&, Int32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class DelFEM4NetLs.CLinearSystemPreconditioner_RigidField2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DelFEM4NetLs.CLinearSystem_RigidField2, DelFEM4NetLs.CPreconditioner_RigidField2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DelFEM4NetLsSol.ILinearSystemPreconditioner_Sol
    System.IDisposable
  Properties:
    Ls.CLinearSystemPreconditioner_RigidField2* Self 'get ' : 
    LsSol.ILinearSystemPreconditioner_Sol* SolSelf 'get ' : 
  Methods:
    get_SolSelf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Self(): PrivateScope, Public, HideBySig, SpecialName
    GetTmpVectorArySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReSizeTmpVecSolver(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DOT(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    COPY(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCAL(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AXPY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MATVEC(Double, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SolvePrecond(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
